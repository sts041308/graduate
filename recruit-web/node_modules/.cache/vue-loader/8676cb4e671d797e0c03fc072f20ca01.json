{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\position\\position-list.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\position\\position-list.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport { Position } from '@/model/position'\nimport PositionModify from '@/view/position/position-modify'\n\nexport default {\n  components: {\n    PositionModify,\n  },\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      showEdit: false,\n      editPositionID: 0,\n    }\n  },\n  async created() {\n    this.loading = true\n    await this.getByHrId()\n    this.loading = false\n  },\n  methods: {\n    async getByHrId() {\n      try {\n        const page = this.currentPage - 1\n        const count = this.pageCount\n        const res = await Position.getByHrId(this.$store.getters.user.id, page, count)\n        this.tableData = res.items\n        this.totalNums = res.total\n      } catch (error) {\n        this.tableData = []\n      }\n    },\n    // 对发布时间列进行格式化\n    dateFormat(row, column) {\n      return row['release_date'].substring(0, 10)\n    },\n    // 对职位状态列进行格式化\n    stateFormat(row, column) {\n      if (row['state'] === 0) {\n        return \"未审核\";\n      } else if (row['state'] === 1) {\n        return \"审核通过\";\n      } else {\n        return \"审核不通过\";\n      }\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByHrId()\n      this.loading = false\n    },\n    handleEdit(val) {\n      this.showEdit = true\n      this.editPositionID = val.id\n    },\n    handleDelete(val) {\n      this.$confirm('是否下架该职位?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await Position.delete(val.id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.getByHrId()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    rowClick() { },\n    editClose() {\n      this.showEdit = false\n      this.getByHrId()\n    },\n  },\n}\n",{"version":3,"sources":["position-list.vue"],"names":[],"mappings":";AAiCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"position-list.vue","sourceRoot":"src/view/position","sourcesContent":["<template>\n  <div>\n    <!-- 列表页面 -->\n    <div class=\"container\" v-if=\"!showEdit\">\n      <div class=\"header\">\n        <div class=\"title\" style=\" text-align: left;\">已发布的职位</div>\n      </div>\n      <!-- 表格 -->\n      <el-table :data=\"tableData\" style=\"width: 100%\" :default-sort=\"{ prop: 'release_date', order: 'descending' }\">\n        <el-table-column prop=\"release_date\" label=\"发布时间\" sortable :formatter=\"dateFormat\"></el-table-column>\n        <el-table-column prop=\"title\" label=\"职位名称\"></el-table-column>\n        <el-table-column prop=\"city\" label=\"工作地点\"></el-table-column>\n        <el-table-column prop=\"quantity\" label=\"招聘人数\"></el-table-column>\n        <el-table-column prop=\"state\" label=\"是否审核\" :formatter=\"stateFormat\"></el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button @click.prevent=\"handleEdit(scope.row)\" type=\"primary\" plain size=\"mini\">编辑</el-button>\n            <el-button @click.prevent=\"handleDelete(scope.row)\" type=\"danger\" plain size=\"mini\">下架职位</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"pagination\">\n        <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n          :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n        </el-pagination>\n      </div>\n    </div>\n    <!-- 编辑职位 -->\n    <position-modify v-else @editClose=\"editClose\" :editPositionID=\"editPositionID\"></position-modify>\n  </div>\n</template>\n\n<script>\nimport { Position } from '@/model/position'\nimport PositionModify from '@/view/position/position-modify'\n\nexport default {\n  components: {\n    PositionModify,\n  },\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      showEdit: false,\n      editPositionID: 0,\n    }\n  },\n  async created() {\n    this.loading = true\n    await this.getByHrId()\n    this.loading = false\n  },\n  methods: {\n    async getByHrId() {\n      try {\n        const page = this.currentPage - 1\n        const count = this.pageCount\n        const res = await Position.getByHrId(this.$store.getters.user.id, page, count)\n        this.tableData = res.items\n        this.totalNums = res.total\n      } catch (error) {\n        this.tableData = []\n      }\n    },\n    // 对发布时间列进行格式化\n    dateFormat(row, column) {\n      return row['release_date'].substring(0, 10)\n    },\n    // 对职位状态列进行格式化\n    stateFormat(row, column) {\n      if (row['state'] === 0) {\n        return \"未审核\";\n      } else if (row['state'] === 1) {\n        return \"审核通过\";\n      } else {\n        return \"审核不通过\";\n      }\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByHrId()\n      this.loading = false\n    },\n    handleEdit(val) {\n      this.showEdit = true\n      this.editPositionID = val.id\n    },\n    handleDelete(val) {\n      this.$confirm('是否下架该职位?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await Position.delete(val.id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.getByHrId()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    rowClick() { },\n    editClose() {\n      this.showEdit = false\n      this.getByHrId()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      text-align: left;\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}