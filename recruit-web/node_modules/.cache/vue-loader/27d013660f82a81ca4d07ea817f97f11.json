{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\admin\\group\\group-list.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\admin\\group\\group-list.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport Admin from '@/lin/model/admin'\nimport LinTable from '@/component/base/table/lin-table'\n\nexport default {\n  components: {\n    LinTable,\n  },\n  inject: ['eventBus'],\n  data() {\n    return {\n      id: 0, // 分组id\n      tableData: [], // 表格数据\n      tableColumn: [], // 表头数据\n      operate: [], // 表格按键操作区\n      dialogFormVisible: false, // 是否弹窗\n      labelPosition: 'right', // 设置label位置\n      form: {\n        // 表单信息\n        name: '',\n        info: '',\n      },\n      cacheForm: {\n        // 缓存第一次的表单信息\n        name: '',\n        info: '',\n      },\n      loading: false,\n      activeTab: '修改信息', // tab 标题\n      rules: {\n        // 表单验证规则\n        name: [{ required: true, message: '请输入角色名称', trigger: 'blur' }],\n        info: [],\n      },\n    }\n  },\n  methods: {\n    // 获取所有分组并传给table渲染\n    async getAllGroups() {\n      try {\n        this.loading = true\n        this.tableData = await Admin.getAllGroups()\n        this.loading = false\n      } catch (e) {\n        this.loading = false\n        console.log(e)\n      }\n    },\n    async confirmEdit() {\n      // 修改分组信息\n      if (this.form.name === '') {\n        this.$message.warning('请将信息填写完整')\n        return\n      }\n      if (this.cacheForm.name !== this.form.name || this.cacheForm.info !== this.form.info) {\n        // eslint-disable-line\n        const res = await Admin.updateOneGroup(this.form.name, this.form.info, this.id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          this.getAllGroups()\n        }\n      }\n      this.dialogFormVisible = false\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    // 获取所拥有的权限并渲染  由子组件提供\n    handleEdit(val) {\n      let selectedData\n      // 单击 编辑按键\n      if (val.index >= 0) {\n        selectedData = val.row\n      } else {\n        // 单机 table row\n        selectedData = val\n      }\n      this.id = selectedData.id\n      this.form.name = selectedData.name\n      this.form.info = selectedData.info\n      this.cacheForm = { ...this.form }\n      this.dialogFormVisible = true\n    },\n    goToGroupEditPage(val) {\n      let selectedData\n      // 单击 编辑按键\n      if (val.index >= 0) {\n        selectedData = val.row\n      } else {\n        // 单机 table row\n        selectedData = val\n      }\n      this.id = selectedData.id\n      this.$router.push({ path: '/admin/group/edit', query: { id: selectedData.id } })\n    },\n    handleDelete(val) {\n      let res\n      this.$confirm('此操作将永久删除该角色, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        try {\n          this.loading = true\n          res = await Admin.deleteOneGroup(val.row.id)\n        } catch (e) {\n          this.loading = false\n          console.log(e)\n        }\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          await this.getAllGroups()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        } else {\n          this.loading = false\n          this.$message({\n            type: 'error',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    // 双击 table row\n    rowClick(row) {\n      this.handleEdit(row)\n    },\n    // 弹框 右上角 X\n    handleClose(done) {\n      done()\n    },\n    // 切换tab栏\n    handleClick(tab) {\n      this.activeTab = tab.name\n    },\n    // 监听分添加组是否成功\n    async addGroup(flag) {\n      if (flag === true) {\n        await this.getAllGroups()\n      }\n    },\n  },\n  async created() {\n    await this.getAllGroups()\n    this.tableColumn = [{ prop: 'name', label: '名称' }, { prop: 'info', label: '信息' }] // 设置表头信息\n    this.operate = [\n      { name: '信息', func: 'handleEdit', type: 'primary' },\n      { name: '权限', func: 'goToGroupEditPage', type: 'info' },\n      { name: '删除', func: 'handleDelete', type: 'danger' },\n    ]\n    // 监听添加分组是否成功\n    this.eventBus.$on('addGroup', this.addGroup)\n  },\n  beforeDestroy() {\n    this.eventBus.$off('addUser', this.addGroup)\n  },\n}\n",{"version":3,"sources":["group-list.vue"],"names":[],"mappings":";AAgfile":"group-list.vue","sourceRoot":"src/view/admin/group","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">角色列表信息</div>\n    <lin-table\n      :tableColumn=\"tableColumn\"\n      :tableData=\"tableData\"\n      :operate=\"operate\"\n      @handleEdit=\"handleEdit\"\n      @goToGroupEditPage=\"goToGroupEditPage\"\n      @handleDelete=\"handleDelete\"\n      @row-click=\"rowClick\"\n      v-loading=\"loading\"\n    ></lin-table>\n    <el-dialog\n      title=\"角色信息\"\n      :append-to-body=\"true\"\n      :visible.sync=\"dialogFormVisible\"\n      :before-close=\"handleClose\"\n      class=\"groupListInfoDialog\"\n    >\n      <div style=\"margin-top:-25px;\">\n        <el-form\n          status-icon\n          v-if=\"dialogFormVisible\"\n          ref=\"form\"\n          label-width=\"120px\"\n          :model=\"form\"\n          label-position=\"labelPosition\"\n          :rules=\"rules\"\n          style=\"margin-left:-35px;margin-bottom:-35px;margin-top:15px;\"\n        >\n          <el-form-item label=\"角色名称\" prop=\"name\">\n            <el-input size=\"medium\" clearable v-model=\"form.name\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"角色描述\" prop=\"info\">\n            <el-input size=\"medium\" clearable v-model=\"form.info\"></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\" style=\"padding-left:5px;\">\n        <el-button type=\"primary\" @click=\"confirmEdit\">确 定</el-button>\n        <el-button @click=\"resetForm('form')\">重 置</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Admin from '@/lin/model/admin'\nimport LinTable from '@/component/base/table/lin-table'\n\nexport default {\n  components: {\n    LinTable,\n  },\n  inject: ['eventBus'],\n  data() {\n    return {\n      id: 0, // 分组id\n      tableData: [], // 表格数据\n      tableColumn: [], // 表头数据\n      operate: [], // 表格按键操作区\n      dialogFormVisible: false, // 是否弹窗\n      labelPosition: 'right', // 设置label位置\n      form: {\n        // 表单信息\n        name: '',\n        info: '',\n      },\n      cacheForm: {\n        // 缓存第一次的表单信息\n        name: '',\n        info: '',\n      },\n      loading: false,\n      activeTab: '修改信息', // tab 标题\n      rules: {\n        // 表单验证规则\n        name: [{ required: true, message: '请输入角色名称', trigger: 'blur' }],\n        info: [],\n      },\n    }\n  },\n  methods: {\n    // 获取所有分组并传给table渲染\n    async getAllGroups() {\n      try {\n        this.loading = true\n        this.tableData = await Admin.getAllGroups()\n        this.loading = false\n      } catch (e) {\n        this.loading = false\n        console.log(e)\n      }\n    },\n    async confirmEdit() {\n      // 修改分组信息\n      if (this.form.name === '') {\n        this.$message.warning('请将信息填写完整')\n        return\n      }\n      if (this.cacheForm.name !== this.form.name || this.cacheForm.info !== this.form.info) {\n        // eslint-disable-line\n        const res = await Admin.updateOneGroup(this.form.name, this.form.info, this.id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          this.getAllGroups()\n        }\n      }\n      this.dialogFormVisible = false\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    // 获取所拥有的权限并渲染  由子组件提供\n    handleEdit(val) {\n      let selectedData\n      // 单击 编辑按键\n      if (val.index >= 0) {\n        selectedData = val.row\n      } else {\n        // 单机 table row\n        selectedData = val\n      }\n      this.id = selectedData.id\n      this.form.name = selectedData.name\n      this.form.info = selectedData.info\n      this.cacheForm = { ...this.form }\n      this.dialogFormVisible = true\n    },\n    goToGroupEditPage(val) {\n      let selectedData\n      // 单击 编辑按键\n      if (val.index >= 0) {\n        selectedData = val.row\n      } else {\n        // 单机 table row\n        selectedData = val\n      }\n      this.id = selectedData.id\n      this.$router.push({ path: '/admin/group/edit', query: { id: selectedData.id } })\n    },\n    handleDelete(val) {\n      let res\n      this.$confirm('此操作将永久删除该角色, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        try {\n          this.loading = true\n          res = await Admin.deleteOneGroup(val.row.id)\n        } catch (e) {\n          this.loading = false\n          console.log(e)\n        }\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          await this.getAllGroups()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        } else {\n          this.loading = false\n          this.$message({\n            type: 'error',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    // 双击 table row\n    rowClick(row) {\n      this.handleEdit(row)\n    },\n    // 弹框 右上角 X\n    handleClose(done) {\n      done()\n    },\n    // 切换tab栏\n    handleClick(tab) {\n      this.activeTab = tab.name\n    },\n    // 监听分添加组是否成功\n    async addGroup(flag) {\n      if (flag === true) {\n        await this.getAllGroups()\n      }\n    },\n  },\n  async created() {\n    await this.getAllGroups()\n    this.tableColumn = [{ prop: 'name', label: '名称' }, { prop: 'info', label: '信息' }] // 设置表头信息\n    this.operate = [\n      { name: '信息', func: 'handleEdit', type: 'primary' },\n      { name: '权限', func: 'goToGroupEditPage', type: 'info' },\n      { name: '删除', func: 'handleDelete', type: 'danger' },\n    ]\n    // 监听添加分组是否成功\n    this.eventBus.$on('addGroup', this.addGroup)\n  },\n  beforeDestroy() {\n    this.eventBus.$off('addUser', this.addGroup)\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n  }\n}\n.groupListInfoDialog ::v-deep .el-dialog__footer {\n  text-align: left;\n  padding-left: 30px;\n}\n.groupListInfoDialog ::v-deep .el-dialog__header {\n  padding-left: 30px;\n}\n\n.groupListInfoDialog ::v-deep .el-dialog__body {\n  padding: 30px;\n}\n</style>\n"]}]}