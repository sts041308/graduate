{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\component\\index\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\component\\index\\index.vue","mtime":1691637996000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport store from '@/store'\nimport { mapActions, mapMutations, mapGetters } from 'vuex'\nimport Vue from 'vue'\nimport Croppa from 'vue-croppa'\nimport User from '@/lin/model/user'\nimport Utils from '@/lin/util/util'\nimport _axios, { get } from '@/lin/plugin/axios'\n\nVue.use(Croppa)\nexport default {\n  data() {\n    return {\n      userImg: null,\n      groupId: '',\n      code: '',\n      myFlag: true,\n      num: 0,\n      showfind: false,\n      showlogin: false,\n      showregister: false,\n      isone: false,\n      istwo: false,\n      direction: 'rtl',\n      loading: false, // 加载动画\n      wait: 2, // 2000ms之内不能重复发起请求\n      nowWait: 0,\n      throttleLogin: null, // 节流登录\n      form: {\n        username: '',\n        password: '',\n        email: '',\n        ver_code: '',\n        confirm_password: '',\n      },\n      registerform: {\n        roletype: '',\n        nickname: '',\n        username: '',\n        password: '',\n        confirm_password: '',\n        email: '',\n        tel: '',\n        group_ids: [''],\n        ver_code: '', // 验证码\n      },\n      registerRules: {\n        username: [\n          {\n            required: true,\n            message: '请输入用户名',\n            trigger: 'blur',\n          },\n        ],\n        password: [\n          {\n            required: true,\n            message: '请输入密码',\n            trigger: 'blur',\n          },\n        ],\n        roletype: [\n          {\n            required: true,\n            message: '请选择用户类型',\n            trigger: 'blur',\n          },\n        ],\n        email: [\n          {\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur',\n          },\n        ],\n        tel: [\n          {\n            required: true,\n            message: '请输入手机号码',\n            trigger: 'blur',\n          },\n        ],\n        confirm_password: [\n          {\n            required: true,\n            message: '请确认输入密码',\n            trigger: 'blur',\n          },\n        ],\n        nickname: [\n          {\n            required: true,\n            message: '请输入真实姓名',\n            trigger: 'blur',\n          },\n        ],\n      },\n      rules: {\n        username: [\n          {\n            required: true,\n            message: '请输入用户名',\n            trigger: 'blur',\n          },\n        ],\n        password: [\n          {\n            required: true,\n            message: '请输入密码',\n            trigger: 'blur',\n          },\n        ],\n        ver_code: [\n          {\n            required: true,\n            message: '请输入验证码',\n            trigger: 'blur',\n          },\n        ],\n        email: [\n          {\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur',\n          },\n        ],\n      },\n    }\n  },\n  props: ['isnow'],\n  created() {},\n  computed: {\n    isemplyee: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      // 求职者groupId==2\n      if (this.groupId === 2 || store.getters.groupId === 2) {\n        return true\n      }\n      return false\n    },\n    ishr: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      // hr groupId==3\n      if (this.groupId === 3 || store.getters.groupId === 3) {\n        return true\n      }\n      return false\n    },\n    isadmin: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      // admin groupId==4\n      if (this.groupId === 4 || store.getters.groupId === 4) {\n        return true\n      }\n      return false\n    },\n    nickname: function () {\n      this.userImg = store.getters.user.avatar ? store.getters.user.avatar : require('@/assets/image/user/user.png')\n      return store.getters.user === null ? null : store.getters.user\n    },\n    userstate: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      return true\n    },\n  },\n  methods: {\n    goToCenter() {\n      this.$router.push('/center')\n    },\n    async userRegister() {\n      try {\n        // check\n        for (let i in this.registerform) {\n          if (typeof this.registerform[i] != 'string') continue\n          if (!this.registerform[i].replace(/ /g, '').length) {\n            return this.$message.warning('内容不能为空')\n          }\n        }\n        // 判断两次密码是否相同\n        if (this.registerform.password != this.registerform.confirm_password) {\n          return this.$message.warning('两次密码不一致')\n        }\n        // 判断邮箱和手机格式是否正确\n        if (!Utils.checkEmail(this.registerform.email) || !Utils.checkTel(this.registerform.tel)) {\n          return this.$message.warning('邮箱或电话的格式错误')\n        }\n        this.registerform.group_ids[0] = this.registerform.roletype\n        const res = await User.register(this.registerform)\n        if (res.code == 400) {\n          return this.$message.warning(res.message)\n        }\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          setTimeout(() => {\n            this.$message.success(`注册成功`)\n          }, 500)\n          // this.resetForm(formName)\n          this.handleClose1()\n          this.showlogin = true\n        }\n      } catch (e) {\n        this.$message.error(e)\n      }\n    },\n    handleClose(done) {\n      this.form = {\n        username: '',\n        password: '',\n      }\n      this.showlogin = false\n    },\n    handleClose1(done) {\n      this.form = {\n        username: '',\n        password: '',\n      }\n      this.showregister = false\n    },\n    handleClose2(done) {\n      this.form = {\n        username: '',\n        password: '',\n      }\n      this.showfind = false\n    },\n    async login() {\n      const { username, password } = this.form\n      try {\n        this.loading = true\n        await User.getToken(username, password)\n        await this.getInformation()\n        this.loading = false\n        // this.$router.push('/about')\n        this.handleClose()\n        this.$message.success('登录成功')\n        store.getters.user['loginTime'] = new Date().toLocaleString()\n        this.$ws.connect_sock(store.getters.user.id)\n        setTimeout(() => {\n          this.$ws.ws.send(JSON.stringify({ type: 'tips' }))\n        }, 1000)\n        // if(code!=200){this.$message.warning(code)}\n      } catch (e) {\n        this.loading = false\n        console.log(e)\n      }\n    },\n    async getInformation() {\n      try {\n        // 尝试获取当前用户信息\n        const user = await User.getPermissions()\n        this.setUserAndState(user)\n        this.setUserPermissions(user.permissions)\n        const id = store.getters.user === null ? '' : store.getters.user.id\n        const res = await get('recruit/user/getGroup/' + id)\n        store.getters.groupId = res\n        this.groupId = res\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    outLogin() {\n      if (this.nickname) {\n        this.loginOut()\n        // 关闭web连接\n        if (this.$ws.ws) {\n          this.$ws.ws.close()\n        }\n        this.$message.success('退出登录成功')\n        return\n      }\n      this.showlogin = true\n      setTimeout(() => {\n        this.$message.warning('尚未登陆.')\n      }, 500)\n    },\n    ...mapActions(['loginOut', 'setUserAndState']),\n    ...mapMutations({\n      setUserPermissions: 'SET_USER_PERMISSIONS',\n    }),\n    async tobacked() {\n      if (this.nickname) {\n        this.$router.push({\n          path: '/about',\n        })\n        return\n      }\n      this.showlogin = true\n      setTimeout(() => {\n        this.$message.warning('请先登录.')\n      }, 500)\n      //\n    },\n    // 登录,并对登录的操作进行简单的处理\n    signLogin() {\n      if (this.form.username.replace(/ /g, '').length < 1 || this.form.password.replace(/ /g, '').length < 1) {\n        return this.$message.warning('账号或密码不能为空')\n      }\n      if (this.nowWait > 0) {\n        return this.$message.warning('操作过快.')\n      }\n      this.nowWait = 1\n      setTimeout(() => {\n        this.nowWait = 0\n      }, this.wait * 1000)\n      // 调用登录的方法\n      this.throttleLogin()\n    },\n    async getMailCode(mail) {\n      if (!mail) {\n        return this.$message.warning('邮箱不能为空')\n      }\n      if (!Utils.checkEmail(mail)) {\n        return this.$message.warning('邮箱格式错误')\n      }\n      this.$message.success('邮件已发送,请注意查收.')\n      let res = await User.getMailCode(mail)\n      this.$message.success(res.message)\n    },\n    // 忘记密码\n    async forgotPwd() {\n      for (let i in this.form) {\n        if (!this.form[i].length) {\n          return this.$message.warning('内容不能为空.')\n        }\n      }\n      if (this.form.password != this.form.confirm_password) {\n        return this.$message.error('两次密码不一致')\n      }\n      if (!Utils.checkEmail(this.form.email)) {\n        return this.$message.warning('邮箱格式错误')\n      }\n      const res = await User.forgotPwd(this.form)\n      if (res.code != 400) {\n        this.handleClose2()\n        this.showlogin = true\n        setTimeout(() => {\n          this.$message.success(res.message)\n        }, 500)\n      } else {\n        this.$message.warning(res.message)\n      }\n    },\n  },\n  mounted() {\n    this.num = this.isnow\n    // if(this.num!=\"0\"){\n    //     let ul=document.getElementById('navNum') ;\n    //     let li=ul.children[this.num-1];\n    //     li.className='now';\n    // }\n\n    if (this.num == '1') {\n      this.isone = true\n    } else if (this.num == '2') {\n      this.istwo = true\n    }\n  },\n  created() {\n    // 节流登录\n    this.throttleLogin = Utils.throttle(this.login, this.wait)\n  },\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/component/index","sourcesContent":["<!-- 大部分页面的头部模块 -->\n<!-- 内容主要包括登录和以及登录后需显示的信息，以及网站的几个大选项（如首页、公司等） -->\n<template>\n  <div class=\"sacroll-warp\">\n    <!-- <el-backtop target=\".sacroll-warp\" :bottom=\"100\">\n\t\t<div style=\"{\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t\tbackground-color: #f2f5f6;\n\t\t\tbox-shadow: 0 0 6px rgba(0,0,0, .12);\n\t\t\ttext-align: center;\n\t\t\tline-height: 40px;\n\t\t\tcolor: #1989fa;\n\t\t}\">\n\t\tUP\n\t\t</div>\n  </el-backtop> -->\n    <!-- 注册框 -->\n    <div>\n      <el-drawer title=\"校企招聘网\" :visible.sync=\"showregister\" :direction=\"direction\" :before-close=\"handleClose1\">\n        <el-card class=\"box-card\" style=\"margin-top: 10%\">\n          <div slot=\"header\" style=\"margin-top: 5%\">\n            <H1 style=\"margin-bottom: 5%\">注册账号</H1>\n            <el-form ref=\"form\" :model=\"registerform\" :rules=\"registerRules\">\n              <el-form-item label=\"账号\" prop=\"username\" label-width=\"25%\">\n                <el-input type=\"text\" placeholder=\"请输入账号\" v-model=\"registerform.username\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"姓名\" prop=\"nickname\" label-width=\"25%\">\n                <el-input type=\"text\" placeholder=\"请输入姓名\" v-model=\"registerform.nickname\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"邮箱\" prop=\"email\" label-width=\"25%\">\n                <el-input type=\"text\" placeholder=\"请输入邮箱\" v-model=\"registerform.email\">\n                  <template slot=\"append\">\n                    <el-button @click=\"getMailCode(registerform.email)\">发送验证码</el-button>\n                  </template>\n                </el-input>\n              </el-form-item>\n              <el-form-item label=\"验证码\" label-width=\"25%\">\n                <el-input placeholder=\"请输入验证码\" v-model=\"registerform.ver_code\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"手机号码\" prop=\"tel\" label-width=\"25%\">\n                <el-input type=\"text\" placeholder=\"请输入手机号码\" v-model=\"registerform.tel\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"密码\" prop=\"password\" label-width=\"25%\">\n                <el-input type=\"password\" placeholder=\"请输入密码\" v-model=\"registerform.password\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"确认密码\" prop=\"confirm_password\" label-width=\"25%\">\n                <el-input type=\"password\" placeholder=\"请输入密码\" v-model=\"registerform.confirm_password\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"用户类型\" prop=\"roletype\" label-width=\"25%\">\n                <div>\n                  <el-radio v-model=\"registerform.roletype\" label=\"2\">求职者</el-radio>\n                  <el-radio v-model=\"registerform.roletype\" label=\"3\">招聘者</el-radio>\n                </div>\n              </el-form-item>\n              <el-form-item inline-message>\n                <el-button type=\"primary\" @click=\"userRegister()\" style=\"width: 100%\">注册</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-card>\n      </el-drawer>\n    </div>\n\n    <!-- 登录框 -->\n    <div>\n      <el-drawer title=\"校企招聘网\" :visible.sync=\"showlogin\" :direction=\"direction\" :before-close=\"handleClose\">\n        <el-card class=\"box-card\" style=\"margin-top: 20%\">\n          <div slot=\"header\" style=\"margin-top: 20%\">\n            <H1 style=\"margin-bottom: 5%\">欢迎登录</H1>\n            <el-form ref=\"form\" :model=\"form\" :rules=\"rules\">\n              <el-form-item label=\"账号\" prop=\"username\" label-width=\"15%\">\n                <el-input\n                  type=\"text\"\n                  placeholder=\"请输入用户名\"\n                  v-model=\"form.username\"\n                  @keyup.enter.native=\"signLogin\"\n                ></el-input>\n              </el-form-item>\n              <el-form-item label=\"密码\" prop=\"password\" label-width=\"15%\">\n                <el-input\n                  type=\"password\"\n                  placeholder=\"请输入密码\"\n                  v-model=\"form.password\"\n                  @keyup.enter.native=\"signLogin\"\n                ></el-input>\n              </el-form-item>\n              <el-form-item inline-message>\n                <el-row>\n                  <el-col>\n                    <el-button type=\"primary\" @click.native.prevent=\"signLogin\" style=\"width: 100%\">登录 </el-button>\n                  </el-col>\n                  <el-col>\n                    <p\n                      @click=\"\n                        showlogin = false\n                        showfind = true\n                      \"\n                      style=\"cursor: pointer; text-decoration: underline\"\n                    >\n                      忘记密码\n                    </p>\n                  </el-col>\n                </el-row>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-card>\n      </el-drawer>\n    </div>\n\n    <!-- 忘记密码 -->\n    <div>\n      <el-drawer title=\"校企招聘网\" :visible.sync=\"showfind\" :direction=\"direction\" :before-close=\"handleClose2\">\n        <el-card class=\"box-card\" style=\"margin-top: 20%\">\n          <div slot=\"header\" style=\"margin-top: 8%\">\n            <H1 style=\"margin-bottom: 5%\">找回密码</H1>\n            <el-form ref=\"form\" @submit.prevent=\"throttleLogin()\" :model=\"form\" :rules=\"rules\">\n              <el-form-item label=\"账号\" prop=\"username\" label-width=\"25%\">\n                <el-input type=\"text\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"邮箱\" prop=\"email\" label-width=\"25%\">\n                <el-input type=\"text\" placeholder=\"请输入邮箱\" v-model=\"form.email\">\n                  <template slot=\"append\">\n                    <el-button @click=\"getMailCode(form.email)\">发送验证码</el-button>\n                  </template>\n                </el-input>\n              </el-form-item>\n              <el-form-item label=\"验证码\" prop=\"ver_code\" label-width=\"25%\">\n                <el-input type=\"text\" placeholder=\"请输入验证码\" v-model=\"form.ver_code\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"新密码\" prop=\"password\" label-width=\"25%\">\n                <el-input type=\"password\" placeholder=\"请输入新密码\" v-model=\"form.password\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"确认新密码\" prop=\"password\" label-width=\"25%\">\n                <el-input type=\"password\" placeholder=\"请确认新密码\" v-model=\"form.confirm_password\"></el-input>\n              </el-form-item>\n              <el-form-item inline-message>\n                <el-row>\n                  <el-col>\n                    <el-button type=\"primary\" @click=\"forgotPwd\" @keyup.enter=\"forgotPwd\" style=\"width: 100%\"\n                      >提交</el-button\n                    >\n                  </el-col>\n                </el-row>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-card>\n      </el-drawer>\n    </div>\n\n    <!-- 头部 -->\n    <div id=\"headTop\" v-if=\"isnow == 1\">\n      <div>\n        <div>\n          <!-- <ul class=\"left\">\n\t\t\t\t\t<i class=\"iconfont icon-mobilephone_fill\"></i>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span class=\"lgstyle\">校企招聘网</span>&nbsp;&nbsp;\n\t\t\t\t\t</li>\n\t\t\t\t</ul> -->\n          <ul class=\"right2\">\n            <li v-if=\"this.userstate\" class=\"right2-r\">\n              <span class=\"right2-button\">\n                <el-button type=\"primary\" round @click=\"tobacked\">进入后台</el-button>\n                <el-button type=\"danger\" round @click=\"outLogin\">注销</el-button>\n              </span>\n              <!-- 用户名 -->\n              <span style=\"font-size: 22x\" v-if=\"nickname\">\n                <span @click=\"goToCenter\" class=\"gotoUser\">{{ nickname.nickname }}</span>\n                <span v-if=\"userImg\">\n                  <!-- {{nickname.avatar}} -->\n                  <img :src=\"userImg\" alt=\"\" />\n                </span>\n              </span>\n              <span v-else>未登录</span>\n            </li>\n          </ul>\n          <ul class=\"right1\">\n            <li style=\"font-size: 18px\">\n              <span v-if=\"!this.userstate\">\n                <el-button @click=\"showlogin = true\" type=\"primary\" round>登录</el-button>&nbsp;&nbsp;\n                <el-button @click=\"showregister = true\" round>注册</el-button>\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div id=\"headnav\">\n      <div class=\"contains\">\n        <div class=\"logo left\">\n          <img class=\"logoimg\" :src=\"require('@/assets/image/logo.png')\" />\n          <span class=\"ads\">全国站</span>\n        </div>\n        <ul class=\"navlist\" id=\"navNum\">\n          <li :class=\"{ now: isone }\">\n            <router-link to=\"/index\">首页</router-link>\n          </li>\n          <!-- <li :class=\"{ now: isone }\">\n            <router-link to=\"/company\">公司大全</router-link>\n          </li> -->\n          <!-- <li :class=\"{ now: istwo }\">\n\t\t\t\t\t<router-link to=\"/index\">其他</router-link>\n\t\t\t\t</li> -->\n          <!-- <li>\n\t\t\t\t\t<router-link to=\"/index\">校园</router-link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<router-link to=\"/index\">言职</router-link>\n\t\t\t\t</li> -->\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport store from '@/store'\nimport { mapActions, mapMutations, mapGetters } from 'vuex'\nimport Vue from 'vue'\nimport Croppa from 'vue-croppa'\nimport User from '@/lin/model/user'\nimport Utils from '@/lin/util/util'\nimport _axios, { get } from '@/lin/plugin/axios'\n\nVue.use(Croppa)\nexport default {\n  data() {\n    return {\n      userImg: null,\n      groupId: '',\n      code: '',\n      myFlag: true,\n      num: 0,\n      showfind: false,\n      showlogin: false,\n      showregister: false,\n      isone: false,\n      istwo: false,\n      direction: 'rtl',\n      loading: false, // 加载动画\n      wait: 2, // 2000ms之内不能重复发起请求\n      nowWait: 0,\n      throttleLogin: null, // 节流登录\n      form: {\n        username: '',\n        password: '',\n        email: '',\n        ver_code: '',\n        confirm_password: '',\n      },\n      registerform: {\n        roletype: '',\n        nickname: '',\n        username: '',\n        password: '',\n        confirm_password: '',\n        email: '',\n        tel: '',\n        group_ids: [''],\n        ver_code: '', // 验证码\n      },\n      registerRules: {\n        username: [\n          {\n            required: true,\n            message: '请输入用户名',\n            trigger: 'blur',\n          },\n        ],\n        password: [\n          {\n            required: true,\n            message: '请输入密码',\n            trigger: 'blur',\n          },\n        ],\n        roletype: [\n          {\n            required: true,\n            message: '请选择用户类型',\n            trigger: 'blur',\n          },\n        ],\n        email: [\n          {\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur',\n          },\n        ],\n        tel: [\n          {\n            required: true,\n            message: '请输入手机号码',\n            trigger: 'blur',\n          },\n        ],\n        confirm_password: [\n          {\n            required: true,\n            message: '请确认输入密码',\n            trigger: 'blur',\n          },\n        ],\n        nickname: [\n          {\n            required: true,\n            message: '请输入真实姓名',\n            trigger: 'blur',\n          },\n        ],\n      },\n      rules: {\n        username: [\n          {\n            required: true,\n            message: '请输入用户名',\n            trigger: 'blur',\n          },\n        ],\n        password: [\n          {\n            required: true,\n            message: '请输入密码',\n            trigger: 'blur',\n          },\n        ],\n        ver_code: [\n          {\n            required: true,\n            message: '请输入验证码',\n            trigger: 'blur',\n          },\n        ],\n        email: [\n          {\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur',\n          },\n        ],\n      },\n    }\n  },\n  props: ['isnow'],\n  created() {},\n  computed: {\n    isemplyee: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      // 求职者groupId==2\n      if (this.groupId === 2 || store.getters.groupId === 2) {\n        return true\n      }\n      return false\n    },\n    ishr: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      // hr groupId==3\n      if (this.groupId === 3 || store.getters.groupId === 3) {\n        return true\n      }\n      return false\n    },\n    isadmin: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      // admin groupId==4\n      if (this.groupId === 4 || store.getters.groupId === 4) {\n        return true\n      }\n      return false\n    },\n    nickname: function () {\n      this.userImg = store.getters.user.avatar ? store.getters.user.avatar : require('@/assets/image/user/user.png')\n      return store.getters.user === null ? null : store.getters.user\n    },\n    userstate: function () {\n      if (store.getters.user === null) {\n        return false\n      }\n      return true\n    },\n  },\n  methods: {\n    goToCenter() {\n      this.$router.push('/center')\n    },\n    async userRegister() {\n      try {\n        // check\n        for (let i in this.registerform) {\n          if (typeof this.registerform[i] != 'string') continue\n          if (!this.registerform[i].replace(/ /g, '').length) {\n            return this.$message.warning('内容不能为空')\n          }\n        }\n        // 判断两次密码是否相同\n        if (this.registerform.password != this.registerform.confirm_password) {\n          return this.$message.warning('两次密码不一致')\n        }\n        // 判断邮箱和手机格式是否正确\n        if (!Utils.checkEmail(this.registerform.email) || !Utils.checkTel(this.registerform.tel)) {\n          return this.$message.warning('邮箱或电话的格式错误')\n        }\n        this.registerform.group_ids[0] = this.registerform.roletype\n        const res = await User.register(this.registerform)\n        if (res.code == 400) {\n          return this.$message.warning(res.message)\n        }\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          setTimeout(() => {\n            this.$message.success(`注册成功`)\n          }, 500)\n          // this.resetForm(formName)\n          this.handleClose1()\n          this.showlogin = true\n        }\n      } catch (e) {\n        this.$message.error(e)\n      }\n    },\n    handleClose(done) {\n      this.form = {\n        username: '',\n        password: '',\n      }\n      this.showlogin = false\n    },\n    handleClose1(done) {\n      this.form = {\n        username: '',\n        password: '',\n      }\n      this.showregister = false\n    },\n    handleClose2(done) {\n      this.form = {\n        username: '',\n        password: '',\n      }\n      this.showfind = false\n    },\n    async login() {\n      const { username, password } = this.form\n      try {\n        this.loading = true\n        await User.getToken(username, password)\n        await this.getInformation()\n        this.loading = false\n        // this.$router.push('/about')\n        this.handleClose()\n        this.$message.success('登录成功')\n        store.getters.user['loginTime'] = new Date().toLocaleString()\n        this.$ws.connect_sock(store.getters.user.id)\n        setTimeout(() => {\n          this.$ws.ws.send(JSON.stringify({ type: 'tips' }))\n        }, 1000)\n        // if(code!=200){this.$message.warning(code)}\n      } catch (e) {\n        this.loading = false\n        console.log(e)\n      }\n    },\n    async getInformation() {\n      try {\n        // 尝试获取当前用户信息\n        const user = await User.getPermissions()\n        this.setUserAndState(user)\n        this.setUserPermissions(user.permissions)\n        const id = store.getters.user === null ? '' : store.getters.user.id\n        const res = await get('recruit/user/getGroup/' + id)\n        store.getters.groupId = res\n        this.groupId = res\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    outLogin() {\n      if (this.nickname) {\n        this.loginOut()\n        // 关闭web连接\n        if (this.$ws.ws) {\n          this.$ws.ws.close()\n        }\n        this.$message.success('退出登录成功')\n        return\n      }\n      this.showlogin = true\n      setTimeout(() => {\n        this.$message.warning('尚未登陆.')\n      }, 500)\n    },\n    ...mapActions(['loginOut', 'setUserAndState']),\n    ...mapMutations({\n      setUserPermissions: 'SET_USER_PERMISSIONS',\n    }),\n    async tobacked() {\n      if (this.nickname) {\n        this.$router.push({\n          path: '/about',\n        })\n        return\n      }\n      this.showlogin = true\n      setTimeout(() => {\n        this.$message.warning('请先登录.')\n      }, 500)\n      //\n    },\n    // 登录,并对登录的操作进行简单的处理\n    signLogin() {\n      if (this.form.username.replace(/ /g, '').length < 1 || this.form.password.replace(/ /g, '').length < 1) {\n        return this.$message.warning('账号或密码不能为空')\n      }\n      if (this.nowWait > 0) {\n        return this.$message.warning('操作过快.')\n      }\n      this.nowWait = 1\n      setTimeout(() => {\n        this.nowWait = 0\n      }, this.wait * 1000)\n      // 调用登录的方法\n      this.throttleLogin()\n    },\n    async getMailCode(mail) {\n      if (!mail) {\n        return this.$message.warning('邮箱不能为空')\n      }\n      if (!Utils.checkEmail(mail)) {\n        return this.$message.warning('邮箱格式错误')\n      }\n      this.$message.success('邮件已发送,请注意查收.')\n      let res = await User.getMailCode(mail)\n      this.$message.success(res.message)\n    },\n    // 忘记密码\n    async forgotPwd() {\n      for (let i in this.form) {\n        if (!this.form[i].length) {\n          return this.$message.warning('内容不能为空.')\n        }\n      }\n      if (this.form.password != this.form.confirm_password) {\n        return this.$message.error('两次密码不一致')\n      }\n      if (!Utils.checkEmail(this.form.email)) {\n        return this.$message.warning('邮箱格式错误')\n      }\n      const res = await User.forgotPwd(this.form)\n      if (res.code != 400) {\n        this.handleClose2()\n        this.showlogin = true\n        setTimeout(() => {\n          this.$message.success(res.message)\n        }, 500)\n      } else {\n        this.$message.warning(res.message)\n      }\n    },\n  },\n  mounted() {\n    this.num = this.isnow\n    // if(this.num!=\"0\"){\n    //     let ul=document.getElementById('navNum') ;\n    //     let li=ul.children[this.num-1];\n    //     li.className='now';\n    // }\n\n    if (this.num == '1') {\n      this.isone = true\n    } else if (this.num == '2') {\n      this.istwo = true\n    }\n  },\n  created() {\n    // 节流登录\n    this.throttleLogin = Utils.throttle(this.login, this.wait)\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import url('//at.alicdn.com/t/font_631781_uzwcwz6vcmcxr.css');\n$nx-color: #449efe;\n$nx-color2: #0470b8;\n$all-padding: 0;\n$nx-width: 76.25rem;\n\n.loginbox {\n  width: 60%;\n  height: 60%;\n  min-width: 400px;\n  max-width: 500px;\n  padding: 20px;\n  overflow: auto;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n}\n\n.left {\n  float: left;\n  padding-left: $all-padding;\n}\n\n.right2 {\n  font-size: large;\n  margin-top: auto;\n  float: right;\n  padding-left: $all-padding;\n}\n.right2-r {\n  position: relative;\n}\n.right2-button {\n  margin-right: 15px;\n}\n.gotoUser {\n  cursor: pointer;\n  border-bottom: 1px solid white;\n  margin-right: 10px;\n  + span {\n    display: inline-block;\n    width: 30px;\n    position: absolute;\n    // right:-30px\n  }\n}\n\n.right {\n  margin-top: 7px;\n  cursor: pointer;\n  float: right;\n  padding-right: $all-padding;\n}\n\n.right1 {\n  cursor: pointer;\n  float: right;\n  padding-right: $all-padding;\n}\n\n#headTop {\n  width: 100%;\n  height: 3rem;\n  background: rgb(51, 51, 51);\n  // background: #587cf7;\n  line-height: 40px;\n\n  // padding: $all-padding;\n  div {\n    width: $nx-width;\n    height: 100%;\n    margin: 0 auto;\n\n    ul {\n      height: 100%;\n\n      .iconfont {\n        float: left;\n        line-height: 2rem;\n        font-size: 1.3rem;\n        color: $nx-color2;\n      }\n\n      li {\n        float: left;\n        height: 100%;\n        font-size: 14px;\n        color: #c4c3c3;\n        margin-top: 0.3rem;\n\n        a {\n          color: #aaa;\n        }\n\n        .lgstyle {\n          color: $nx-color2;\n          font-size: 28px;\n          font-family: cursive;\n        }\n      }\n    }\n  }\n}\n\n#headnav {\n  width: 100%;\n  height: 4rem;\n  // padding: $all-padding;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n  overflow: hidden;\n\n  .contains {\n    width: 76.25rem;\n    height: 100%;\n    margin: 0 auto;\n\n    .logo {\n      width: 10rem;\n      height: 1.2rem;\n      margin-left: 4rem;\n      margin-right: 2rem;\n\n      img {\n        margin: 5px;\n        height: 50px;\n      }\n\n      span {\n        float: right;\n        display: inline-block;\n        line-height: 80px;\n        margin-left: 5px;\n      }\n    }\n\n    .navlist {\n      height: 100%;\n\n      li {\n        float: left;\n        font-size: 20px;\n        margin: 20px;\n        padding: 0 6px 11px;\n\n        &.now,\n        &:hover {\n          border-bottom: 2px solid $nx-color2;\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}