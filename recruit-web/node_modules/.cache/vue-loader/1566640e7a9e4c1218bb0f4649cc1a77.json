{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\about\\about.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\about\\about.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport LinSearch from '@/component/base/search/lin-search'\nimport { Position } from '@/model/position'\nimport { Application } from '@/model/application'\nimport { Resume } from '@/model/resume'\nimport { Favor } from '@/model/favor'\nimport PositionDetail from '@/view/position/position-detail'\nimport HotPosition from '@/view/position/hot-position'\n\nexport default {\n  components: {\n    LinSearch,\n    PositionDetail,\n    HotPosition,\n  },\n  data() {\n    return {\n      showDetail: false, // 是否显示职位详情页\n      showHot: false, // 是否显示热招职位列表\n      tableData: [], // 表格数据\n      totalNums: 0, // 数据总数\n      currentPage: 1, // 当前页数\n      pageCount: 10, // 每页的数据量\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailPositionID: 0, // 职位id\n      searchKeyword: '', // 搜索时输入的关键字\n      keyword: null, // 查询关键字,用于显示搜索提示\n      form: {}, //投递简历时传入的列表数据\n      list: {}, //收藏职位时传入的列表数据\n      logo: require(\"@/assets/image/logo.png\")\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByState()\n    this.loading = false\n  },\n  watch: {\n    /**\n     * 关键字搜索\n     */\n    searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal\n        if (this.searchUser) {\n          this.keyword = `${newVal}`\n        }\n      } else {\n        this.keyword = ''\n        this.$refs.searchKeyword.clear()\n      }\n      this.searchPositionList()\n    },\n  },\n  methods: {\n    async getByState() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 首页展示所有审核通过的职位\n      const positions = await Position.getByState(1, page, count)\n      this.tableData = positions.items\n      this.totalNums = positions.total\n    },\n    // 通过查询关键字分页搜索职位列表 \n    async searchPositionList() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      const positions = await Position.getByKeyword(page, count, this.searchKeyword)\n      this.tableData = positions.items\n      this.totalNums = positions.total\n    },\n    // 清空检索\n    async backInit() {\n      this.searchKeyword = ''\n      this.keyword = ''\n      this.tableData = []\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    /**\n     * 监听输入查询关键字\n     */\n    async onQueryChange(query) {\n      this.searchKeyword = query.trim()\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailPositionID = val.id\n    },\n    handleHot() {\n      this.showHot = true\n    },\n    rowClick() { },\n    detailClose() {\n      this.showDetail = false\n      this.getByState()\n    },\n    hotClose() {\n      this.showHot = false\n      this.showDetail = false\n      this.getByState()\n    },\n    // 投递简历\n    async handleDelivery(val) {\n      // 根据用户id和职位id判断用户是否已经投递过该职位，避免重复投递\n      const flag = await Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id)\n      if (flag === false) {\n        // 不能重复投递\n        this.$message.error(\"你已投递过该职位，不可重复投递\")\n      } else {\n        // 获取当前登录求职者的用户id\n        this.form.user_id = this.$store.getters.user.id\n        // 获取当前投递简历的职位id\n        this.form.position_id = val.id\n        // 根据用户id查询绑定的简历id\n        const temp = await Resume.getByUserId(this.$store.getters.user.id)\n        this.form.resume_id = temp.resume_id\n        console.log(temp)\n        // 根据职位id查询该职位所对应的hr_id\n        const result = await Position.getById(val.id)\n        this.form.hr_id = result.hr_id\n        this.form.company_id = val.company_id\n        // 调用创建申请的方法\n        const res = await Application.create(this.form)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n        }\n      }\n    },\n    // 收藏职位\n    async handleCollect(val) {\n      // 获取当前登录求职者的用户id\n      this.list.user_id = this.$store.getters.user.id\n      // 获取当前收藏的职位id\n      this.list.position_id = val.id\n      // 调用添加收藏的方法\n      const res = await Favor.create(this.list)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n    },\n  },\n}\n",{"version":3,"sources":["about.vue"],"names":[],"mappingsfile":"about.vue","sourceRoot":"src/view/about","sourcesContent":["<template>\n  <div class=\"container\" v-if=\"!showDetail && !showHot\">\n    <!-- <div class=\"header\">\n      <div class=\"title\">\n        欢迎使用校企招聘网系统\n        <img :src=\"logo\" alt=\"\">\n      </div>\n    </div> -->\n    <!-- 搜索框 -->\n    <div class=\"box\">\n      <div class=\"left\">\n        <img :src=\"logo\" alt=\"\">\n        <lin-search @query=\"onQueryChange\" placeholder=\"请输入职位名称\" ref=\"searchKeyword\" />\n      </div>\n      <div class=\"right\" @click.prevent=\"handleHot()\">热门职位推荐</div>\n    </div>\n    <transition name=\"fade\">\n      <div class=\"search\" v-if=\"keyword\">\n        <p class=\"search-tip\"> \n          搜索“\n          <span class=\"search-keyword\">{{ keyword }}</span>”, 找到\n          <span class=\"search-num\">{{ totalNums }}</span> 条职位信息\n        </p>\n        <button class=\"search-back\" @click=\"backInit\">返回全部职位</button>\n      </div>\n    </transition>\n    <!-- 职位列表 -->\n    <el-table stripe v-loading=\"loading\" :data=\"tableData\">\n      <el-table-column prop=\"title\" label=\"职位名称\" width=\"250\"></el-table-column>\n      <el-table-column prop=\"city\" label=\"工作地点\" width=\"250\"></el-table-column>\n      <el-table-column prop=\"salary_down,salary_up\" label=\"薪资\" width=\"250\">\n        <template slot-scope=\"scope\">{{ scope.row.salary_down }}-{{ scope.row.salary_up }}</template>\n      </el-table-column>\n      <el-table-column prop=\"quantity\" label=\"招聘人数\" width=\"250\"></el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button @click.prevent=\"handleDetail(scope.row)\" type=\"primary\" plain size=\"mini\">查看</el-button>\n          <el-button @click.prevent=\"handleDelivery(scope.row)\" v-permission=\"{ permission: '投递简历' }\" type=\"success\"\n            plain size=\"mini\">投递简历</el-button>\n          <el-button @click.prevent=\"handleCollect(scope.row)\" v-permission=\"{ permission: '添加收藏' }\" type=\"info\" plain\n            size=\"mini\">收藏职位</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n        :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n      </el-pagination>\n    </div>\n  </div>\n  <!-- 职位详情 -->\n  <position-detail v-else-if=\"showDetail && !showHot\" @detailClose=\"detailClose\" :detailPositionID=\"detailPositionID\"\n    :temp=\"1\"></position-detail>\n  <!-- 热招职位 -->\n  <hot-position v-else @hotClose=\"hotClose\"></hot-position>\n</template>\n\n<script>\nimport LinSearch from '@/component/base/search/lin-search'\nimport { Position } from '@/model/position'\nimport { Application } from '@/model/application'\nimport { Resume } from '@/model/resume'\nimport { Favor } from '@/model/favor'\nimport PositionDetail from '@/view/position/position-detail'\nimport HotPosition from '@/view/position/hot-position'\n\nexport default {\n  components: {\n    LinSearch,\n    PositionDetail,\n    HotPosition,\n  },\n  data() {\n    return {\n      showDetail: false, // 是否显示职位详情页\n      showHot: false, // 是否显示热招职位列表\n      tableData: [], // 表格数据\n      totalNums: 0, // 数据总数\n      currentPage: 1, // 当前页数\n      pageCount: 10, // 每页的数据量\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailPositionID: 0, // 职位id\n      searchKeyword: '', // 搜索时输入的关键字\n      keyword: null, // 查询关键字,用于显示搜索提示\n      form: {}, //投递简历时传入的列表数据\n      list: {}, //收藏职位时传入的列表数据\n      logo: require(\"@/assets/image/logo.png\")\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByState()\n    this.loading = false\n  },\n  watch: {\n    /**\n     * 关键字搜索\n     */\n    searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal\n        if (this.searchUser) {\n          this.keyword = `${newVal}`\n        }\n      } else {\n        this.keyword = ''\n        this.$refs.searchKeyword.clear()\n      }\n      this.searchPositionList()\n    },\n  },\n  methods: {\n    async getByState() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 首页展示所有审核通过的职位\n      const positions = await Position.getByState(1, page, count)\n      this.tableData = positions.items\n      this.totalNums = positions.total\n    },\n    // 通过查询关键字分页搜索职位列表 \n    async searchPositionList() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      const positions = await Position.getByKeyword(page, count, this.searchKeyword)\n      this.tableData = positions.items\n      this.totalNums = positions.total\n    },\n    // 清空检索\n    async backInit() {\n      this.searchKeyword = ''\n      this.keyword = ''\n      this.tableData = []\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    /**\n     * 监听输入查询关键字\n     */\n    async onQueryChange(query) {\n      this.searchKeyword = query.trim()\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailPositionID = val.id\n    },\n    handleHot() {\n      this.showHot = true\n    },\n    rowClick() { },\n    detailClose() {\n      this.showDetail = false\n      this.getByState()\n    },\n    hotClose() {\n      this.showHot = false\n      this.showDetail = false\n      this.getByState()\n    },\n    // 投递简历\n    async handleDelivery(val) {\n      // 根据用户id和职位id判断用户是否已经投递过该职位，避免重复投递\n      const flag = await Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id)\n      if (flag === false) {\n        // 不能重复投递\n        this.$message.error(\"你已投递过该职位，不可重复投递\")\n      } else {\n        // 获取当前登录求职者的用户id\n        this.form.user_id = this.$store.getters.user.id\n        // 获取当前投递简历的职位id\n        this.form.position_id = val.id\n        // 根据用户id查询绑定的简历id\n        const temp = await Resume.getByUserId(this.$store.getters.user.id)\n        this.form.resume_id = temp.resume_id\n        console.log(temp)\n        // 根据职位id查询该职位所对应的hr_id\n        const result = await Position.getById(val.id)\n        this.form.hr_id = result.hr_id\n        this.form.company_id = val.company_id\n        // 调用创建申请的方法\n        const res = await Application.create(this.form)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n        }\n      }\n    },\n    // 收藏职位\n    async handleCollect(val) {\n      // 获取当前登录求职者的用户id\n      this.list.user_id = this.$store.getters.user.id\n      // 获取当前收藏的职位id\n      this.list.position_id = val.id\n      // 调用添加收藏的方法\n      const res = await Favor.create(this.list)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 25px;\n      font-weight: 500;\n      margin-left: 450px;\n    }\n  }\n\n  .search {\n    height: 52px;\n    width: 100%;\n    background: rgba(57, 99, 188, 0.1);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-top: 24px;\n    margin-bottom: 24px;\n\n    .search-tip {\n      margin-left: 40px;\n      height: 52px;\n      line-height: 52px;\n      color: #354058;\n      font-size: 14px;\n\n      .search-keyword {\n        color: $theme;\n      }\n\n      .search-num {\n        color: #f4516c;\n      }\n    }\n\n    .search-back {\n      margin: 8px 20px;\n      height: 32px;\n      background: #f4516c;\n      border: none;\n      border-radius: 2px;\n      color: #fff;\n      padding: 0 13px;\n      font-size: 14px;\n      cursor: pointer;\n    }\n  }\n\n  .box {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    .left {\n      margin-left: 280px;\n      position: relative;\n      height: 50px;\n      margin-top: 20px !important;\n      margin-bottom: 10px !important;\n\n      img {\n        display: inline-block;\n        width: 150px;\n        position: absolute;\n        left: -160px;\n        top: 0;\n        height: 100%;\n      }\n    }\n\n    .right {\n      height: 59px;\n      line-height: 59px;\n      color: $right-side-font-color;\n      font-size: 18px;\n      font-weight: 400;\n      margin-left: 50px;\n      cursor: pointer;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 30px;\n  }\n}\n</style>\n\n"]}]}