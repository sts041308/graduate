{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\position\\position-create.vue?vue&type=style&index=0&id=5d719e5b&lang=scss&scoped=true","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\position\\position-create.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n\n.my-autocomplete {\n  li {\n    line-height: normal;\n    padding: 7px;\n    display: inline-flex;\n    align-content: space-around;\n\n    .name {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .id {\n      margin-right: 15px;\n      font-size: 12px;\n      color: #b4b4b4;\n    }\n\n    .highlighted .addr {\n      color: #ddd;\n    }\n  }\n}\n",{"version":3,"sources":["position-create.vue"],"names":[],"mappings":";AAuKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"position-create.vue","sourceRoot":"src/view/position","sourcesContent":["<template>\n\t<!-- 发布职位页面 -->\n\t<div class=\"container\" v-if=\"!showCreate\">\n\t\t<div class=\"title\">\n\t\t\t<span>新增职位</span>\n\t\t</div>\n\t\t<el-divider></el-divider>\n\t\t<div class=\"wrap\">\n\t\t\t<el-row>\n\t\t\t\t<el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n\t\t\t\t\t<el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n\t\t\t\t\t\t<el-form-item label=\"职位名称\" prop=\"title\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.title\" placeholder=\"请填写职位名称\"></el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"职位分类\" prop=\"category_id\">\n\t\t\t\t\t\t\t<el-autocomplete @focus=\"loadCategorySuggestions\" popper-class=\"my-autocomplete\" class=\"inline-input\"\n\t\t\t\t\t\t\t\tv-model=\"categoryState\" :fetch-suggestions=\"queryCategorySearch\" placeholder=\"请填写职位所属分类\" @select=\"handleCategorySelect\">\n\t\t\t\t\t\t\t\t<template slot-scope=\"{ item }\">\n\t\t\t\t\t\t\t\t\t<span class=\"id\">{{ item.id }}</span>\n\t\t\t\t\t\t\t\t\t<span class=\"name\">{{ item.name }}</span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-autocomplete>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"招聘人数\" prop=\"quantity\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.quantity\" placeholder=\"请填写职位招聘人数\"></el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"薪资\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.salary_down\" style=\"float: left;width: 20%\" placeholder=\"请填写最低薪资\">\n\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t\t<span style=\"float: left;\">~</span>\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.salary_up\" style=\"float: left;width: 20%\" placeholder=\"请填写最高薪资\">\n\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"工作地点\" prop=\"city\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.city\" placeholder=\"请填写工作地点\"/>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"学历要求\" prop=\"edu_back\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.edu_back\" placeholder=\"请填写学历要求\"/>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"职位要求\" prop=\"requirement\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.requirement\" placeholder=\"请填写职位要求\">\n\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"公司名称\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.company_name\" disabled></el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item class=\"submit\">\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"submitForm('form')\" :disabled=\"isdisable\">保 存</el-button>\n\t\t\t\t\t\t\t<el-button @click=\"resetForm('form')\">重 置</el-button>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t</el-form>\n\t\t\t\t</el-col>\n\t\t\t</el-row>\n\t\t</div>\t\n\t</div>\n\n<!-- 企业认证 -->\n<company-create v-else @createClose=\"createClose\"></company-create>\n</template>\n\n<script>\nimport CompanyCreate from '@/view/company/company-create'\nimport {\n  HRCompany\n} from '@/model/hrCompany'\nimport {\n  Category\n} from '@/model/category'\nimport {\n  Position\n} from '@/model/position'\n\nexport default {\n  components: {\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {},\n      categoryState: '',\n      categorySuggestions: [],\n      showCreate: false,\n      isdisable: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      // 先验证是否完成企业认证\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      if (res.state !== 1) {\n        this.$message.error(\"未完成企业认证不能发布职位\");\n        this.isdisable = true\n      }\n      // 没有发生异常，说明已经完成企业认证，给表单的公司名称赋值\n      this.form.company_name = res.name\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    async submitForm(formName) {\n      try {\n        this.loading = true\n        // 拿到HR对应的Company的id值\n        const result = await HRCompany.get(this.$store.getters.user.id)\n        this.form.company_id = result.id\n        // 给hr_id赋值\n        this.form.hr_id = this.$store.getters.user.id\n        // 新增职位\n        const res = await Position.create(this.form)\n        this.loading = false\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          // 清空输入框，方便继续添加职位\n          this.resetForm(formName)\n        }\n      } catch (error) {\n        this.loading = false\n        console.log(error)\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      const suggestions = this.categorySuggestions\n      const results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions\n      cb(results)\n    },\n    createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return suggestion => {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleCategorySelect(item) {\n      this.categoryState = item.name\n      // 给表单的职位分类id赋值\n      this.form.category_id = item.id\n    },\n    async loadCategorySuggestions() {\n      if (this.categorySuggestions.length > 0) {\n        return\n      }\n      try {\n        this.categorySuggestions = await Category.getList()\n        if (this.categorySuggestions.length === 0) {\n          this.$message.error('暂无职位分类，请先添加')\n        }\n      } catch (error) {\n        this.$message.error('获取职位分类失败')\n        console.error(error)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n\n.my-autocomplete {\n  li {\n    line-height: normal;\n    padding: 7px;\n    display: inline-flex;\n    align-content: space-around;\n\n    .name {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .id {\n      margin-right: 15px;\n      font-size: 12px;\n      color: #b4b4b4;\n    }\n\n    .highlighted .addr {\n      color: #ddd;\n    }\n  }\n}\n</style>\n"]}]}