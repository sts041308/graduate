{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\category\\category-list.vue?vue&type=style&index=0&id=0a22b1c6&lang=scss&scoped=true","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\category\\category-list.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n",{"version":3,"sources":["category-list.vue"],"names":[],"mappings":";AAuGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"category-list.vue","sourceRoot":"src/view/category","sourcesContent":["<template>\n  <div>\n    <!-- 列表页面 -->\n    <div class=\"container\" v-if=\"!showEdit\">\n      <div class=\"header\">\n        <div class=\"title\" style=\" text-align: left;\">职位分类列表</div>\n      </div>\n      <el-table :data=\"tableData\" border style=\"width: 120%\">\n        <el-table-column prop=\"id\" label=\"分类id\" width=\"100\">\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"分类名称\" width=\"300\">\n        </el-table-column>\n        <el-table-column prop=\"description\" label=\"分类描述\" :show-overflow-tooltip=\"true\" width=\"450\">\n        </el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button @click.prevent=\"handleEdit(scope.row)\" type=\"primary\" plain size=\"mini\">编辑</el-button>\n            <el-button @click.prevent=\"handleDelete(scope.row)\" type=\"danger\" plain size=\"mini\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"pagination\">\n        <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n          :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n        </el-pagination>\n      </div>\n    </div>\n    <!-- 编辑页面 -->\n    <category-edit v-else @editClose=\"editClose\" :editCategoryID=\"editCategoryID\"></category-edit>\n  </div>\n</template>\n\n<script>\nimport {\n  Category\n} from '@/model/category'\nimport CategoryEdit from '@/view/category/category-edit'\n\nexport default {\n  components: {\n    CategoryEdit,\n  },\n  data() {\n    return {\n      showEdit: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      editCategoryID: 0,\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getAll()\n    this.loading = false\n  },\n  methods: {\n    async getAll() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      const categorys = await Category.getAll(page, count)\n      this.tableData = categorys.items\n      this.totalNums = categorys.total\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getAll()\n      this.loading = false\n    },\n    handleEdit(val) {\n      this.showEdit = true\n      this.editCategoryID = val.id\n    },\n    handleDelete(val) {\n      this.$confirm('是否删除该职位分类?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await Category.delete(val.id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.getAll()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    rowClick() { },\n    editClose() {\n      this.showEdit = false\n      this.getAll()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}