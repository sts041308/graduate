{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\position\\position-modify.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\position\\position-modify.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport { Position } from '@/model/position'\nimport { Category } from '@/model/category'\n\nexport default {\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    editPositionID: {\n      type: Number,\n    },\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      categoryState: '',\n      categorySuggestions: [],\n    }\n  },\n  async mounted() {\n    this.loading = true\n    const res = await Position.getById(this.editPositionID)\n    this.categoryState = res.category_name\n    // 更新职位浏览量(每进入一次职位详情页面，职位浏览量加一)\n    await Position.updateHits(this.editPositionID)\n    this.form = res\n    this.loading = false\n  },\n  methods: {\n    async submitForm() {\n      // 拿到hr_id\n      this.form.hr_id = this.$store.getters.user.id\n      const res = await Position.updatePosition(this.form.id, this.form)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 返回职位列表页面\n        this.$emit('editClose')\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    back() {\n      this.$emit('editClose')\n    },\n    queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      const suggestions = this.categorySuggestions\n      const results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions\n      cb(results)\n    },\n    createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return suggestion => {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleCategorySelect(item) {\n      this.categoryState = item.name\n      // 给表单的职位分类id赋值\n      this.form.category_id = item.id\n    },\n    async loadCategorySuggestions() {\n      if (this.categorySuggestions.length > 0) {\n        return\n      }\n      try {\n        this.categorySuggestions = await Category.getList()\n        if (this.categorySuggestions.length === 0) {\n          this.$message.error('暂无职位分类，请先添加')\n        }\n      } catch (error) {\n        this.$message.error('获取职位分类失败')\n        console.error(error)\n      }\n    },\n  },\n}\n",{"version":3,"sources":["position-modify.vue"],"names":[],"mappings":";AA8DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"position-modify.vue","sourceRoot":"src/view/position","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">\n      <span>修改职位信息</span> <span class=\"back\" @click=\"back\"> <i class=\"iconfont icon-fanhui\"></i> 返回 </span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <el-form-item label=\"职位名称\" prop=\"title\">\n              <el-input size=\"medium\" v-model=\"form.title\"></el-input>\n            </el-form-item>\n\n            <el-form-item label=\"职位分类\" prop=\"category_id\">\n              <el-autocomplete @focus=\"loadCategorySuggestions\" popper-class=\"my-autocomplete\" class=\"inline-input\"\n                v-model=\"categoryState\" :fetch-suggestions=\"queryCategorySearch\" placeholder=\"请填写职位所属分类\"\n                @select=\"handleCategorySelect\">\n                <template slot-scope=\"{ item }\">\n                  <span class=\"id\">{{ item.id }}</span>\n                  <span class=\"name\">{{ item.name }}</span>\n                </template>\n              </el-autocomplete>\n            </el-form-item>\n\n            <el-form-item label=\"职位浏览量\">\n              <el-input size=\"medium\" v-model=\"form.hits\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"招聘人数\" prop=\"quantity\">\n              <el-input size=\"medium\" v-model=\"form.quantity\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"薪资\">\n              <el-input size=\"medium\" v-model=\"form.salary_down\" style=\"float: left;width: 10%\"></el-input>\n              <span style=\"float: left;\">~</span>\n              <el-input size=\"medium\" v-model=\"form.salary_up\" style=\"float: left;width: 10%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"工作地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"职位要求\" prop=\"requirement\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.requirement\">\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"公司名称\">\n              <el-input size=\"medium\" v-model=\"form.company_name\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司简介\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.company_desc\" disabled>\n              </el-input>\n            </el-form-item>\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Position } from '@/model/position'\nimport { Category } from '@/model/category'\n\nexport default {\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    editPositionID: {\n      type: Number,\n    },\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      categoryState: '',\n      categorySuggestions: [],\n    }\n  },\n  async mounted() {\n    this.loading = true\n    const res = await Position.getById(this.editPositionID)\n    this.categoryState = res.category_name\n    // 更新职位浏览量(每进入一次职位详情页面，职位浏览量加一)\n    await Position.updateHits(this.editPositionID)\n    this.form = res\n    this.loading = false\n  },\n  methods: {\n    async submitForm() {\n      // 拿到hr_id\n      this.form.hr_id = this.$store.getters.user.id\n      const res = await Position.updatePosition(this.form.id, this.form)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 返回职位列表页面\n        this.$emit('editClose')\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    back() {\n      this.$emit('editClose')\n    },\n    queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      const suggestions = this.categorySuggestions\n      const results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions\n      cb(results)\n    },\n    createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return suggestion => {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleCategorySelect(item) {\n      this.categoryState = item.name\n      // 给表单的职位分类id赋值\n      this.form.category_id = item.id\n    },\n    async loadCategorySuggestions() {\n      if (this.categorySuggestions.length > 0) {\n        return\n      }\n      try {\n        this.categorySuggestions = await Category.getList()\n        if (this.categorySuggestions.length === 0) {\n          this.$message.error('暂无职位分类，请先添加')\n        }\n      } catch (error) {\n        this.$message.error('获取职位分类失败')\n        console.error(error)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n\n.my-autocomplete {\n  li {\n    line-height: normal;\n    padding: 7px;\n    display: inline-flex;\n    align-content: space-around;\n\n    .name {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .id {\n      margin-right: 15px;\n      font-size: 12px;\n      color: #b4b4b4;\n    }\n\n    .highlighted .addr {\n      color: #ddd;\n    }\n  }\n}\n</style>\n\n"]}]}