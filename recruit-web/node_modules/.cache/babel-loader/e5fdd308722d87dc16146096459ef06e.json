{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\resume\\detail.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\resume\\detail.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\babel.config.js","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport Title from \"../../component/Title/index.vue\";\nimport Content from \"../../component/Content/index.vue\";\nimport moment from 'moment';\nimport _exportPDF from './export-pdf';\nimport { Resume } from '@/model/resume';\nexport default {\n  name: \"Detail\",\n  components: {\n    Title: Title,\n    Content: Content\n  },\n  props: {\n    id: String\n  },\n  watch: {\n    id: function id(now, old) {\n      this.updataInfo(now);\n    }\n  },\n  data: function data() {\n    return {\n      downloading: false,\n      model: \"p\",\n      // 基本信息\n      // 头像照片\n      avatar: \"\",\n      jobIntention: \"\",\n      name: \"\",\n      sex: \"\",\n      age: \"\",\n      english: \"\",\n      tel: \"1\",\n      email: \"\",\n      home: \"\",\n      // 教育经历\n      educations: [{\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\"\n      }],\n      // 专业技能\n      ability: {\n        // 专业技能显示模式，ol为有序列表（前面是数字），ul为无序列表（前面是圆点），p为段落\n        skillsMode: 'p',\n        descriptions: \"\"\n      },\n      // 项目经历\n      projects: [{\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        // 项目背景显示模式，ol为有序列表（前面是数字），ul为无序列表（前面是圆点），p为段落\n        backgroundMode: 'ol',\n        background: '',\n        performance: \"\"\n      }],\n      // 实习经历\n      experiences: [{\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\"\n      }],\n      // 个人评价\n      evaluate: {\n        // 个人评价显示模式，ol为有序列表（前面是数字），ul为无序列表（前面是圆点），p为段落\n        wordMode: 'p',\n        word: ''\n      },\n      defaultImg: require(\"@/assets/image/user/user.png\")\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            if (!(this.id === null || this.id == '' || this.id == \"null\")) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 3:\n            _context.next = 5;\n            return Resume.getById(this.id);\n          case 5:\n            res = _context.sent;\n            // console.log(res)\n            this.ability.descriptions = res.ability, this.avatar = res.avatar ? res.avatar : this.defaultImg, this.educations = res.educations, this.experiences = res.experiences, this.projects = res.projects, this.jobIntention = res.job_intention, this.english = res.english, this.name = res.name, this.sex = res.sex === 0 ? \"男\" : \"女\", this.evaluate.word = res.personal_summary, this.tel = res.tel.substring(0, 3) + \"****\" + res.tel.substr(res.tel.length - 4), this.age = res.age, this.email = res.email, this.home = res.home;\n            _context.next = 12;\n            break;\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n          case 12:\n            _context.prev = 12;\n            this.imageUrlToBase64();\n            return _context.finish(12);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this, [[0, 9, 12, 15]]);\n    }));\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n    return mounted;\n  }(),\n  created: function created() {},\n  methods: {\n    imageUrlToBase64: function imageUrlToBase64() {\n      //一定要设置为let，不然图片不显示\n      var image = new Image();\n      //解决跨域问题\n      image.setAttribute('crossOrigin', 'anonymous');\n      var imageUrl = this.avatar;\n      image.src = imageUrl;\n      var that = this;\n      //image.onload为异步加载\n      image.onload = function () {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height);\n        var quality = 0.8;\n        //这里的dataurl就是base64类型\n        var dataURL = canvas.toDataURL(\"image/jpeg\", quality); //使用toDataUrl将图片转换成jpeg的格式,不要把图片压缩成png，因为压缩成png后base64的字符串可能比不转换前的长！\n        that.avatar = dataURL;\n      };\n    },\n    exportPDF: function exportPDF() {\n      try {\n        this.downloading = true;\n        this.imageUrlToBase64();\n        _exportPDF.exportPdf(\"downResume\", this.name + \"-\" + this.jobIntention);\n      } catch (err) {\n        this.$message.error(\"导出简历发生错误\");\n        this.downloading = false;\n      } finally {\n        this.downloading = false;\n        this.$message.success(\"导出简历成功\");\n      }\n    },\n    changeDiploma: function changeDiploma(value) {\n      if (value == 0) return \"高中\";else if (value == 1) return \"大学专科\";else if (value == 2) return \"大学本科\";else if (value == 3) return \"硕士研究生\";else if (value == 4) return \"博士研究生\";else return \"\";\n    },\n    dateformat: function dateformat(date) {\n      return moment(date).format(\"YYYY\");\n    },\n    monthformat: function monthformat(date) {\n      return moment(date).format(\"YYYY.MM\");\n    },\n    updataInfo: function () {\n      var _updataInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(nowid) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return Resume.getById(nowid);\n            case 3:\n              res = _context2.sent;\n              //获取当前用户信息\n              // console.log(res)\n              this.ability.descriptions = res.ability, this.avatar = 'http://localhost:5000/assets/' + res.avatar,\n              //跨域问题用了5000端口代替\n              // console.log('当前图片路径'+this.avatar)\n              this.educations = res.educations, this.experiences = res.experiences, this.projects = res.projects, this.jobIntention = res.job_intention, this.english = res.english, this.name = res.name, this.sex = res.sex === 0 ? \"男\" : \"女\", this.evaluate.word = res.personal_summary, this.tel = res.tel, this.age = res.age, this.email = res.email, this.home = res.home;\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n            case 10:\n              _context2.prev = 10;\n              return _context2.finish(10);\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7, 10, 12]]);\n      }));\n      function updataInfo(_x) {\n        return _updataInfo.apply(this, arguments);\n      }\n      return updataInfo;\n    }()\n  }\n};",{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Title","Content","moment","exportPDF","Resume","components","props","id","String","watch","now","old","updataInfo","data","downloading","model","avatar","jobIntention","sex","age","english","tel","email","home","educations","start_time","end_time","major","diploma","descriptions","ability","skillsMode","projects","backgroundMode","background","performance","experiences","position","evaluate","wordMode","word","defaultImg","require","mounted","_mounted","_callee","res","_callee$","_context","getById","job_intention","personal_summary","substring","substr","t0","console","log","imageUrlToBase64","created","methods","image","Image","setAttribute","imageUrl","src","that","onload","canvas","document","createElement","width","height","context","getContext","drawImage","quality","dataURL","toDataURL","exportPdf","$message","success","changeDiploma","dateformat","date","format","monthformat","_updataInfo","_callee2","nowid","_callee2$","_context2","_x"],"sources":["src/view/resume/detail.vue"],"sourcesContent":["<template>\n  <div>\n    <el-button round style=\"float:right\" type=\"success\" @click=\"exportPDF()\" v-loading=\"downloading\">导出简历</el-button>\n    <div class=\"index\" id=\"downResume\">\n      <div class=\"resume\">\n        <!-- 基本信息 -->\n        <div class=\"info\">\n          <div class=\"info_left_img\">\n            <el-avatar :size=\"120\"><img :src=\"avatar ? avatar : defaultImg\" size=\"120\" class=\"aa\"></el-avatar>\n<!--             <el-avatar :size=\"120\" :src=\"avatar\"></el-avatar>-->\n\n          </div>\n          <div class=\"info-right\">\n            <div class=\"info_name\">\n              <h1>{{ name }}</h1>\n              <span>{{ jobIntention }}</span>\n            </div>\n            <div class=\"info_other\">\n              <el-row :gutter=\"15\">\n                <el-form ref=\"resultForm\" size=\"medium\" label-width=\"100px\" label-position=\"left\">\n                  <el-col :span=\"8\">\n                    <el-form-item label-width=\"0\">\n                      <i class=\"el-icon-s-custom\"></i>\n                      {{ sex }} | {{ age }}\n                    </el-form-item>\n                  </el-col>\n                  <el-col :span=\"8\">\n                    <el-form-item label-width=\"0\" title=\"英语等级\">\n                      <i class=\"el-icon-star-off\"></i>\n                      {{ english }}\n                    </el-form-item>\n                  </el-col>\n                  <el-col :span=\"8\">\n                    <el-form-item label-width=\"0\" title=\"联系电话\">\n                      <i class=\"el-icon-phone\"></i>\n                      {{ tel }}\n                    </el-form-item>\n                  </el-col>\n                  <el-col :span=\"9\">\n                    <el-form-item label-width=\"0\" title=\"邮箱\">\n                      <i class=\"el-icon-message\"></i>\n                      {{ email }}\n                    </el-form-item>\n                  </el-col>\n                  <el-col :span=\"8\">\n                    <el-form-item label-width=\"0\"  title=\"居住地\">\n                      <i class=\"el-icon-s-home\"></i>\n                      {{ home }}\n                    </el-form-item>\n                  </el-col>\n                </el-form>\n              </el-row>\n            </div>\n          </div>\n        </div>\n\n        <!-- 教育经历 -->\n        <div class=\"education\">\n          <Title title=\"教育背景\" />\n          <div class=\"main\">\n            <div v-for=\"(item, index) in educations\" :key=\"index\">\n              <el-row :gutter=\"20\">\n                <el-col :span=\"6\">\n                  <span>{{ item.name }}</span>\n                </el-col>\n                <el-col :span=\"6\">\n                  <span>{{ item.major }}</span>\n                </el-col>\n                <el-col :span=\"5\">\n                  <span>{{ changeDiploma(item.diploma) }}</span>\n                </el-col>\n                <el-col :span=\"5\" :offset=\"2\" class=\"time\">\n                  <span>{{ monthformat(item.start_time) }}-{{ monthformat(item.end_time) }}</span>\n                </el-col>\n              </el-row>\n              <Content :data=\"item.descriptions\" />\n            </div>\n          </div>\n        </div>\n\n        <!-- 专业技能 -->\n        <div class=\"skill\">\n          <Title title=\"专业技能\" />\n          <div class=\"main\">\n            <Content :data=\"ability.descriptions\" :mode=\"model\" />\n          </div>\n        </div>\n\n        <!-- 实习经历 -->\n        <div class=\"internship\" v-if=\"experiences\">\n          <Title title=\"实习经历\" />\n          <div class=\"main\">\n            <div v-for=\"(experience, index) in experiences\" :key=\"index\">\n              <el-row :gutter=\"20\">\n                <el-col :span=\"10\">\n                  <span class=\"weight\">{{ experience.name }}</span>\n                </el-col>\n                <el-col :span=\"5\">\n                  <span>{{ experience.position }}</span>\n                </el-col>\n                <el-col :span=\"5\" :offset=\"4\" class=\"time\">\n                  <span>{{ monthformat(experience.start_time) }}-{{ monthformat(experience.end_time) }}</span>\n                </el-col>\n              </el-row>\n              <Content :data=\"experience.performance\" />\n            </div>\n          </div>\n        </div>\n\n        <!-- 项目经历 -->\n        <div class=\"projects\" v-if=\"projects\">\n          <Title title=\"项目经历\" />\n          <div class=\"main\">\n            <div v-for=\"(project, index) in projects\" :key=\"index\">\n              <el-row :gutter=\"20\">\n                <el-col :span=\"10\">\n                  <span class=\"project_name weight\">\n                    {{\n                        project.name\n                    }}\n                  </span>\n                </el-col>\n                <el-col :span=\"5\">\n                  <span>{{ project.position }}</span>\n                </el-col>\n                <el-col :span=\"5\" :offset=\"9\" class=\"time\">\n                  <span>{{ monthformat(project.start_time) }}-{{ monthformat(project.end_time) }}</span>\n                </el-col>\n                <!-- <el-col :span=\"24\">\n                <span class=\"weight\">项目地址：</span>\n                <span>{{ project.address }}</span>\n              </el-col>-->\n              </el-row>\n              <div class=\"weight\">项目背景：</div>\n              <Content :data=\"project.background\" :mode=\"project.backgroundMode\" />\n              <div class=\"weight\">项目描述：</div>\n              <Content :data=\"project.performance\" />\n            </div>\n          </div>\n        </div>\n\n        <!-- 个人评价 -->\n        <div class=\"evaluate\" v-if=\"evaluate\">\n          <Title title=\"个人评价\" />\n          <div class=\"main\">\n            <Content :data=\"evaluate.word\" :mode=\"evaluate.wordMode\" />\n            <Content :data=\"evaluate.descriptions\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Title from \"../../component/Title/index.vue\";\nimport Content from \"../../component/Content/index.vue\";\nimport moment from 'moment';\nimport exportPDF from './export-pdf'\nimport {\n  Resume\n} from '@/model/resume'\nexport default {\n  name: \"Detail\",\n  components: {\n    Title,\n    Content,\n  },\n  props: {\n    id: String,\n  },\n  watch: {\n    id(now, old) {\n      this.updataInfo(now)\n    }\n  },\n  data() {\n    return {\n      downloading: false,\n      model: \"p\",\n      // 基本信息\n      // 头像照片\n      avatar: \"\",\n      jobIntention: \"\",\n      name: \"\",\n      sex: \"\",\n      age: \"\",\n      english: \"\",\n      tel: \"1\",\n      email: \"\",\n      home: \"\",\n      // 教育经历\n      educations: [{\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\",\n      },],\n      // 专业技能\n      ability: {\n        // 专业技能显示模式，ol为有序列表（前面是数字），ul为无序列表（前面是圆点），p为段落\n        skillsMode: 'p',\n        descriptions: \"\",\n      },\n      // 项目经历\n      projects: [{\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        // 项目背景显示模式，ol为有序列表（前面是数字），ul为无序列表（前面是圆点），p为段落\n        backgroundMode: 'ol',\n        background: '',\n        performance: \"\"\n      },],\n      // 实习经历\n      experiences: [{\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\",\n      },],\n      // 个人评价\n      evaluate: {\n        // 个人评价显示模式，ol为有序列表（前面是数字），ul为无序列表（前面是圆点），p为段落\n        wordMode: 'p',\n        word: ''\n      },\n      defaultImg: require(\"@/assets/image/user/user.png\")\n    };\n\n  },\n  async mounted() {\n    try {\n      if (this.id === null || this.id == '' || this.id == \"null\") return\n      const res = await Resume.getById(this.id)\n      // console.log(res)\n      this.ability.descriptions = res.ability,\n        this.avatar = res.avatar ? res.avatar : this.defaultImg,\n        this.educations = res.educations,\n        this.experiences = res.experiences,\n        this.projects = res.projects,\n        this.jobIntention = res.job_intention,\n        this.english = res.english,\n        this.name = res.name,\n        this.sex = res.sex === 0 ? \"男\" : \"女\",\n        this.evaluate.word = res.personal_summary,\n        this.tel = res.tel.substring(0, 3)+\"****\"+res.tel.substr(res.tel.length-4),\n        this.age = res.age,\n        this.email = res.email,\n        this.home = res.home\n\n    } catch (error) {\n      console.log(error)\n    } finally {\n      this.imageUrlToBase64()\n    }\n  },\n  created() { },\n  methods: {\n    imageUrlToBase64() {\n      //一定要设置为let，不然图片不显示\n      let image = new Image();\n      //解决跨域问题\n      image.setAttribute('crossOrigin', 'anonymous');\n      let imageUrl = this.avatar;\n      image.src = imageUrl\n      let that = this;\n      //image.onload为异步加载\n      image.onload = () => {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height);\n        var quality = 0.8;\n        //这里的dataurl就是base64类型\n        var dataURL = canvas.toDataURL(\"image/jpeg\", quality);//使用toDataUrl将图片转换成jpeg的格式,不要把图片压缩成png，因为压缩成png后base64的字符串可能比不转换前的长！\n        that.avatar = dataURL\n      }\n    },\n    exportPDF() {\n      try {\n        this.downloading = true\n        this.imageUrlToBase64()\n        exportPDF.exportPdf(\"downResume\", this.name + \"-\" + this.jobIntention)\n      } catch (err) {\n        this.$message.error(\"导出简历发生错误\")\n        this.downloading = false\n      } finally {\n        this.downloading = false;\n        this.$message.success(\"导出简历成功\")\n      }\n    },\n    changeDiploma(value) {\n      if (value == 0) return \"高中\"\n      else if (value == 1) return \"大学专科\"\n      else if (value == 2) return \"大学本科\"\n      else if (value == 3) return \"硕士研究生\"\n      else if (value == 4) return \"博士研究生\"\n      else return \"\"\n    },\n    dateformat(date) {\n      return moment(date).format(\"YYYY\")\n    },\n    monthformat(date) {\n      return moment(date).format(\"YYYY.MM\")\n    },\n    async updataInfo(nowid) {\n      try {\n        const res = await Resume.getById(nowid)//获取当前用户信息\n        // console.log(res)\n        this.ability.descriptions = res.ability,\n          this.avatar = 'http://localhost:5000/assets/'+res.avatar,//跨域问题用了5000端口代替\n          // console.log('当前图片路径'+this.avatar)\n          this.educations = res.educations,\n          this.experiences = res.experiences,\n          this.projects = res.projects,\n          this.jobIntention = res.job_intention,\n          this.english = res.english,\n          this.name = res.name,\n          this.sex = res.sex === 0 ? \"男\" : \"女\",\n          this.evaluate.word = res.personal_summary,\n          this.tel = res.tel,\n          this.age = res.age,\n          this.email = res.email,\n          this.home = res.home\n      } catch (error) {\n        console.log(error)\n      } finally { }\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.aa {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.aa img {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0 auto;\n  height: 100%;\n}\n\n.index {\n  margin: 20px auto;\n\n  .resume {\n    width: 820px;\n    margin: 0 auto;\n    padding: 20px 20px;\n    box-shadow: 0px 3px 10px 5px #e9e9e9;\n    border-radius: 10px;\n    line-height: 28px;\n\n    .weight {\n      font-weight: 500;\n    }\n\n    .main {\n      padding: 20px 12px 30px 12px;\n    }\n\n    .time {\n      span {\n        color: #a8a8a8;\n      }\n    }\n\n    .info {\n      margin-bottom: 0px;\n    }\n\n    .info {\n      display: flex;\n      align-items: center;\n\n      .info_left_img {\n        ::v-deep img {\n          width: 100%;\n        }\n      }\n\n      .info-right {\n        margin-left: 50px;\n      }\n\n      &_name {\n        line-height: 80px;\n        display: flex;\n\n        h1 {\n          font-size: 32px;\n        }\n\n        span {\n          margin-left: 15px;\n          font-size: 14px;\n        }\n      }\n\n      &_other {\n        ::v-deep .el-descriptions__cell {\n          padding-right: 35px;\n        }\n\n        i {\n          color: #c0c4cc;\n          font-size: 15px;\n          margin-right: 10px;\n        }\n      }\n    }\n\n    .project {\n      .project_name {\n        letter-spacing: 1px;\n        font-size: 16px;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}