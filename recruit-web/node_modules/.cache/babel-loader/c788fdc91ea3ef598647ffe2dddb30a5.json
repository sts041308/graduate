{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\view\\about\\msg.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\view\\about\\msg.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\babel.config.js","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { Application } from '@/model/application';\nimport Utils from '@/lin/util/util';\nimport store from '@/store';\nexport default {\n  data: function data() {\n    return {\n      me: null,\n      inputRedis: {},\n      // 输入的内容缓存\n      defaultImg: require(\"@/assets/image/user/user.png\"),\n      selectInfo: {\n        id: 0,\n        msg: []\n      },\n      chatInfo: {},\n      target_info: [],\n      token_msg: {},\n      wsCtl: {\n        allow: true,\n        timer: null\n      },\n      hart: {\n        timer: 5,\n        // 每隔一段时间监听一次在线客户端 /s\n        type: \"ping\",\n        timeObj: null,\n        check: {} // 当客户端离线之后,第一次离线的加入对象内, 如果第二次还是离线,那么将目标用户标志为离线,避免重复闪烁\n      }\n    };\n  },\n  methods: {\n    clickChat: function clickChat(item) {\n      // console.log(\"item?\",item);\n      this.selectInfo = item;\n      if (!item.isRead) {\n        this.$ws.ws.send(JSON.stringify({\n          type: \"state\",\n          readID: this.selectInfo.id\n        }));\n        item.isRead = 1;\n      }\n      this.moeScroll(10);\n    },\n    sendMsg: function sendMsg() {\n      var _this = this;\n      if (!this.wsCtl.allow) {\n        return;\n      }\n      if (this.$ws.ws.readyState != 1) {\n        return this.$message.warning(\"暂时无法发送信息, 您与服务器的连接已断开.\");\n      }\n      if (!this.inputRedis[this.selectInfo.id]) return;\n      var inputMsg = this.inputRedis[this.selectInfo.id].slice(0, 500); // 限制字数\n      this.inputRedis[this.selectInfo.id] = \"\"; // 清空输入框\n\n      this.selectInfo.msg.push({\n        \"type\": \"this\",\n        \"text\": inputMsg,\n        time: new Date().toLocaleString()\n      });\n      // this.target_info.push({\"type\":\"target\",\"text\":inputMsg})\n      this.wsCtl.timer = setTimeout(function () {\n        _this.wsCtl.allow = true;\n        clearTimeout(_this.wsCtl.timer);\n        _this.wsCtl.timer = null;\n      }, 1000);\n      try {\n        this.$ws.ws.send(JSON.stringify({\n          self: {\n            name: this.me.nickname,\n            icon: JSON.stringify(this.me.avatar).length > 100 ? \"null\" : this.me.avatar,\n            id: this.me.id\n          },\n          target: {\n            id: this.selectInfo.id,\n            name: this.selectInfo.name,\n            icon: JSON.stringify(this.selectInfo.icon).length > 100 ? \"null\" : this.selectInfo.icon\n          },\n          time: new Date().toLocaleString(),\n          type: \"alone\",\n          // this_info:this.selectInfo.msg,\n          // target_info:this.target_info,\n          content: inputMsg,\n          recvID: this.selectInfo.id\n        }));\n        this.moeScroll();\n      } catch (e) {\n        this.selectInfo.msg.push({\n          \"type\": \"this\",\n          \"text\": \"(发送失败)\" + this.inputRedis[this.selectInfo.id]\n        });\n        // this.$ws.connect_sock(this.me.id)\n        // this.$messge.warning(\"发送失败\")\n      }\n    },\n    recvMsg: function recvMsg() {\n      var _this2 = this;\n      if (this.$ws.ws) {\n        // 机器人默认在线,除非用户断开了与后台的连接\n        this.chatInfo[\"-1\"][\"online\"] = true;\n        var msgInfo = {\n          type: \"token\",\n          _id: this.me.id\n        };\n        this.$ws.ws.send(JSON.stringify(msgInfo));\n        this.$ws.ws.onmessage = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(res) {\n            var data, info, _info, i, cls, keyID, name, icon, msg, readList, _info2, _i;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  data = JSON.parse(res.data); // console.log(\"res:\",data); \n                  // 捕获系统消息并跳出\n                  if (!(data.type == \"system\")) {\n                    _context.next = 8;\n                    break;\n                  }\n                  _context.next = 4;\n                  return Application.getMsg(Utils.filterStr(data.content));\n                case 4:\n                  info = _context.sent;\n                  _this2.chatInfo[\"-1\"].msg.push({\n                    type: \"sys\",\n                    text: info.data,\n                    time: data.time\n                  });\n                  _this2.moeScroll();\n                  return _context.abrupt(\"return\");\n                case 8:\n                  if (data.type == \"token\") {\n                    _info = {};\n                    for (i in data.content) {\n                      cls = data.content[i].recvId == _this2.me.id ? \"target\" : \"this\"; // 如果信息列表没有这个用户的数据\n                      keyID = data.content[i].sendId;\n                      if (_info[keyID] == null) {\n                        name = JSON.parse(data.content[i].self).name;\n                        icon = JSON.parse(data.content[i].self).icon; // 如果发送者的id是当前用户, 那么将写入数据的key修改为接收者的key\n                        if (parseInt(_this2.me.id) == parseInt(keyID)) {\n                          keyID = data.content[i].recvId;\n                          name = JSON.parse(data.content[i].target).name;\n                          icon = JSON.parse(data.content[i].target).icon;\n                        }\n                        _info[keyID] = keyID;\n                        msg = [{\n                          type: cls,\n                          text: data.content[i].content,\n                          time: data.content[i].timestamp\n                        }];\n                        if (_this2.chatInfo[keyID] && _this2.chatInfo[keyID][\"msg\"]) {\n                          _this2.chatInfo[keyID][\"msg\"].push(msg[0]);\n                        } else {\n                          _this2.$set(_this2.chatInfo, keyID, _this2.packMsg(keyID, name, \"alone\", data.content[i].time, icon, msg, \"null\", 0));\n                        }\n                      } else {\n                        _this2.chatInfo[keyID][\"msg\"].push({\n                          type: cls,\n                          text: data.content[i].content,\n                          time: data.content[i].timestamp\n                        });\n                      }\n                      _this2.chatInfo[keyID].isRead = data.readList.indexOf(\"^\" + keyID + \"&\") != -1 ? 0 : 1;\n                    }\n                    if (data.ContactID != -1) {\n                      _this2.selectInfo = _this2.chatInfo[data.ContactID];\n                      _this2.selectInfo.isRead = 1;\n                    } else {\n                      readList = data.readList.replace(/&/g, \"\").split(\"^\").filter(function (item) {\n                        return item != \"\";\n                      });\n                      if (readList.length) {\n                        _this2.selectInfo = _this2.chatInfo[readList[0]];\n                        if (_this2.selectInfo && !_this2.selectInfo.isRead) {\n                          _this2.$ws.ws.send(JSON.stringify({\n                            type: \"state\",\n                            readID: _this2.selectInfo.id\n                          }));\n                          _this2.selectInfo.isRead = 1;\n                        }\n                      }\n                    }\n                    // 心跳包\n                    _this2.hartCheck(_this2.chatInfo);\n                    _this2.hart.timeObj = setInterval(function () {\n                      _this2.hartCheck(_this2.chatInfo);\n                    }, _this2.hart.timer * 1000);\n                  } else if (data.type == \"alone\") {\n                    if (_this2.chatInfo[data.self.id]) {\n                      _this2.chatInfo[data.self.id].msg.push({\n                        \"type\": \"target\",\n                        \"text\": data.content,\n                        time: data.time\n                      });\n                      _this2.chatInfo[data.self.id].isRead = 0;\n                    } else {\n                      // 解决无法实时刷新dom\n                      _this2.$set(_this2.chatInfo, data.self.id, {\n                        \"id\": data.self.id,\n                        \"name\": data.self.nickName,\n                        \"type\": \"user\",\n                        \"time\": data.time,\n                        \"icon\": data.self.icon,\n                        \"msg\": [{\n                          type: \"target\",\n                          text: data.content,\n                          time: data.time\n                        }],\n                        \"head\": null,\n                        \"isRead\": 0\n                      });\n                    }\n                  } else if (data.type === \"ping\") {\n                    _this2.hart.check = {};\n                    if (data.content.length) {\n                      _info2 = data.content.split(\"|\");\n                      for (_i = 0; _i < _info2.length - 1; _i++) {\n                        _this2.hart.check[_info2[_i]] = true;\n                        _this2.$set(_this2.chatInfo[_info2[_i]], \"online\", true);\n                      }\n                    }\n                  }\n                  _this2.moeScroll();\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n      }\n    },\n    moeScroll: function moeScroll() {\n      var _this3 = this;\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 200;\n      setTimeout(function () {\n        var container = _this3.$el.querySelector(\".content\");\n        container.scrollTop = container.scrollHeight;\n      }, time);\n    },\n    getBrowserType: function getBrowserType() {\n      // 获取浏览器 userAgent\n      var ua = navigator.userAgent;\n      // 是否为 Opera\n      if (ua.indexOf('Opera') > -1) {\n        return 'Opera';\n      }\n\n      // 是否为 IE\n      var isIE = ua.indexOf('compatible') > -1 && ua.indexOf('MSIE') > -1 && !isOpera;\n      var isIE11 = ua.indexOf('Trident') > -1 && ua.indexOf(\"rv:11.0\") > -1;\n      // 返回结果\n      if (isIE11) {\n        return 'IE11';\n      } else if (isIE) {\n        return \"IE\";\n      }\n      // 是否为 Edge\n      if (ua.indexOf(\"Edg\") > -1) {\n        return 'Edge';\n      }\n      // 是否为 Firefox\n      if (ua.indexOf(\"Firefox\") > -1) {\n        return 'Firefox';\n      }\n      // 是否为 Safari\n      if (ua.indexOf(\"Safari\") > -1 && ua.indexOf(\"Chrome\") == -1) {\n        return \"Safari\";\n      }\n      // 是否为 Chrome\n      if (ua.indexOf(\"Chrome\") > -1 && ua.indexOf(\"Safari\") > -1 && ua.indexOf(\"Edge\") == -1) {\n        return 'Chrome';\n      }\n      // 是否为 UC\n      if (ua.indexOf(\"UBrowser\") > -1) {\n        return 'UC';\n      }\n      // 是否为 QQ\n      if (ua.indexOf(\"QQBrowser\") > -1) {\n        return 'QQ';\n      }\n      // 都不是\n      return \"未知设备\";\n    },\n    // 封装信息体\n    packMsg: function packMsg(id, name, type, time, icon, msg) {\n      var header = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n      var isRead = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n      return {\n        id: id,\n        name: name,\n        type: type,\n        time: time,\n        icon: icon == null ? this.defaultImg : icon,\n        msg: msg,\n        header: header,\n        isRead: isRead\n      };\n    },\n    // 心跳包检测\n    hartCheck: function hartCheck(friends) {\n      // 如果与服务器的连接断开了\n      if (this.$ws.ws.readyState === this.$ws.ws.CLOSED) {\n        this.$message.warning(\"聊天服务器已断开\");\n        clearInterval(this.hart.timeObj);\n        // 将所有用户设为离线\n        for (var i in this.chatInfo) {\n          this.chatInfo[i][\"online\"] = false;\n        }\n        return;\n      }\n      var friends_list = \"\";\n      for (var iterator in friends) {\n        if (parseInt(iterator) > 0) {\n          if (!this.hart.check[iterator]) {\n            this.$set(friends[iterator], \"online\", false);\n          }\n          friends_list += iterator + \"|\";\n        }\n      }\n      this.$ws.ws.send(JSON.stringify({\n        type: this.hart.type,\n        friends_list: friends_list\n      }));\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // this.$message.closeAll();\n            // this.hartCheck(this.chatInfo);\n            this.me = store.getters.user;\n            this.token_msg = {\n              id: this.me.id,\n              name: this.me.name,\n              icon: this.me.acatar,\n              msg: [],\n              header: \"null\",\n              isRead: 1,\n              type: \"contact\",\n              time: new Date().toLocaleString()\n            };\n            // 默认有2个消息\n            this.chatInfo[\"-1\"] = this.packMsg(\"-1\", \"校企直聘智能机\", \"sys\", new Date().toLocaleString(), require(\"@/assets/image/user/Cat.png\"), [{\n              \"type\": \"sys\",\n              \"text\": \"\\\n\t\t\t\t<div class='sys-msg'>\\\n\t\t\t\t\t<h2>登录操作通知</h2>\\\n\t\t\t\t\t<div class='describe'>[\" + this.me.nickname + \"]欢迎回来校企招聘系统</div>\\\n\t\t\t\t\t<div class='info'>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span>设备/平台</span>\\\n\t\t\t\t\t\t\t<span>\" + this.getBrowserType() + \"浏览器</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span>登录方式</span>\\\n\t\t\t\t\t\t\t<span>普通登录</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span>当前时间</span>\\\n\t\t\t\t\t\t\t<span>\" + new Date().toLocaleString() + \"</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span></span>\\\n\t\t\t\t\t\t\t<span>如有疑问,可以对我说噢!</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t</div>\\\n\t\t\t\t</div>\\\n\t\t\t\",\n              time: new Date().toLocaleString()\n            }], \"登录操作通知\", 1);\n            this.chatInfo[\"1\"] = this.packMsg(\"1\", \"系统管理员\", \"alone\", new Date().toLocaleString(), require(\"@/assets/image/user/Cat.png\"), [{\n              \"type\": \"target\",\n              \"text\": \"反馈请留言\",\n              time: new Date().toLocaleString()\n            }], \"\", 1);\n            this.selectInfo = this.chatInfo[\"-1\"];\n            if (!(this.$ws.ws.readyState != 1)) {\n              _context2.next = 7;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 7:\n            _context2.next = 9;\n            return this.recvMsg();\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this);\n    }));\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n    return mounted;\n  }(),\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.wsCtl.timer);\n    clearInterval(this.hart.timeObj);\n  }\n};",{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Application","Utils","store","data","me","inputRedis","defaultImg","require","selectInfo","id","msg","chatInfo","target_info","token_msg","wsCtl","allow","timer","hart","timeObj","check","methods","clickChat","item","isRead","$ws","ws","send","JSON","stringify","readID","moeScroll","sendMsg","_this","readyState","$message","warning","inputMsg","time","Date","toLocaleString","setTimeout","clearTimeout","nickname","icon","avatar","target","content","recvID","recvMsg","_this2","msgInfo","_id","onmessage","_ref","_callee","res","_info","cls","keyID","readList","_info2","_i","_callee$","_context","parse","getMsg","filterStr","text","recvId","sendId","parseInt","timestamp","$set","packMsg","indexOf","ContactID","replace","split","filter","hartCheck","setInterval","nickName","_x","_this3","container","$el","querySelector","scrollTop","scrollHeight","getBrowserType","ua","navigator","userAgent","isIE","isOpera","isIE11","header","friends","CLOSED","clearInterval","friends_list","mounted","_mounted","_callee2","_callee2$","_context2","getters","user","acatar","beforeDestroy"],"sources":["src/view/about/msg.vue"],"sourcesContent":["<!-- 首页热门职位模块 -->\n<template>\n\t<div class=\"ws-msg-form\">\n\t\t<div class=\"msg-content\">\n\t\t\t<p class=\"msg-title\"  v-if=\"selectInfo.id==0\">在线聊天</p>\n\t\t\t<p class=\"msg-title\"  v-else>\n\t\t\t\t正在与 <b>{{selectInfo.name}}</b> 交流\n\t\t\t\t<span v-if=\"selectInfo.online\">(对方在线)</span>\n\t\t\t</p>\n\t\t\t<div class=\"left\">\n\t\t\t\t<div class=\"item\" v-for=\"(item,index) in chatInfo\" :key=\"index\" @click=\"clickChat(item)\"\n\t\t\t\t\t\t:class=\"{'select-style':item.id==selectInfo.id}\">\n\t\t\t\t\t<img class=\"icon\" :src=\"item.icon ? item.icon : defaultImg\">\n\t\t\t\t\t<!-- <img class=\"icon\" :src=\"defaultImg\" v-else> -->\n\t\t\t\t\t<div class=\"name\">{{item.name}}</div>\n\t\t\t\t\t<div class=\"msg\" v-if=\"item.type!='sys'\">\n\t\t\t\t\t\t<span v-if=\"item.msg && item.msg.length>0\">{{item.msg[item.msg.length-1].text}}</span>\n\t\t\t\t\t\t<span v-else>快来与对方进行沟通吧</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"msg\" v-else>{{item.header}}</div>\n\t\t\t\t\t<span :class=\"{'newTip':item.isRead==0}\"></span>\n\t\t\t\t\t<span :class=\"{'online':item.online}\"></span>\n\t\t\t\t\t<span class=\"chat-time\">{{item.msg[item.msg.length-1].time.split(\" \")[1]}}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"right\">\n\t\t\t\t<div class=\"form\">\n\t\t\t\t\t<div class=\"content\" v-if=\"selectInfo.id==-1 || selectInfo.id>0\">\t\n\t\t\t\t\t\t<div v-if=\"selectInfo.msg.length>0\">\n\t\t\t\t\t\t\t<div class=\"msg-item\" v-for=\"(item,index) in selectInfo.msg\" :key=\"index\">\n\t\t\t\t\t\t\t\t<div :class=\"item.type\">\n\t\t\t\t\t\t\t\t\t<img  :src=\"me.avatar ? me.avatar : defaultImg\" v-if=\"item.type=='this'\">\n\t\t\t\t\t\t\t\t\t<img  :src=\"selectInfo.icon\" v-else>\n\t\t\t\t\t\t\t\t\t<span v-html=\"item.text\"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"content\" v-else></div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"msg-footer\">\n\t\t\t\t\t\t<textarea  v-model=\"inputRedis[selectInfo.id]\" maxlength=\"500\"></textarea>\n\t\t\t\t\t\t<div class=\"send\">\n\t\t\t\t\t\t\t<el-row>\n\t\t\t\t\t\t\t\t<span v-if=\"inputRedis[selectInfo.id]\">{{inputRedis[selectInfo.id].length}}/500</span>\n\t\t\t\t\t\t\t\t<span v-else>0/500</span>\n\t\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"sendMsg\">发送</el-button>\n\t\t\t\t\t\t\t</el-row>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t</div>\n\t\n</template>\n\n<script>\nimport { Application } from '@/model/application'\nimport Utils from '@/lin/util/util'\nimport store from '@/store';\nexport default{\n\tdata(){\n\t\treturn {\n\t\t\tme:null,\n\t\t\tinputRedis:{}, // 输入的内容缓存\n\t\t\tdefaultImg:require(\"@/assets/image/user/user.png\"),\n\t\t\tselectInfo:{\n\t\t\t\tid:0,\n\t\t\t\tmsg:[]\n\t\t\t},\n\t\t\tchatInfo:{},\n\t\t\ttarget_info:[],\n\t\t\ttoken_msg : {},\n\t\t\twsCtl:{\n\t\t\t\tallow:true,\n\t\t\t\ttimer:null\n\t\t\t},\n\t\t\thart:{\n\t\t\t\ttimer:5,  // 每隔一段时间监听一次在线客户端 /s\n\t\t\t\ttype:\"ping\",\n\t\t\t\ttimeObj:null,\n\t\t\t\tcheck:{} // 当客户端离线之后,第一次离线的加入对象内, 如果第二次还是离线,那么将目标用户标志为离线,避免重复闪烁\n\t\t\t}\n\t\t}\n\t},\n\tmethods:{\n\t\tclickChat(item){\n\t\t\t// console.log(\"item?\",item);\n\t\t\tthis.selectInfo=item;\n\t\t\tif(!item.isRead){\n\t\t\t\tthis.$ws.ws.send(JSON.stringify({type:\"state\",readID:this.selectInfo.id}))\n\t\t\t\titem.isRead = 1;\n\t\t\t}\n\t\t\tthis.moeScroll(10);\n\t\t},\n\t\tsendMsg(){\n\t\t\tif(!this.wsCtl.allow){return;}\n\t\t\tif(this.$ws.ws.readyState!=1){return this.$message.warning(\"暂时无法发送信息, 您与服务器的连接已断开.\")}\n\t\t\tif(!this.inputRedis[this.selectInfo.id]) return;\n\t\t\tlet inputMsg = this.inputRedis[this.selectInfo.id].slice(0,500); // 限制字数\n\t\t\tthis.inputRedis[this.selectInfo.id] = \"\"  // 清空输入框\n\n\t\t\tthis.selectInfo.msg.push({\"type\":\"this\",\"text\":inputMsg,time:new Date().toLocaleString()})\n\t\t\t// this.target_info.push({\"type\":\"target\",\"text\":inputMsg})\n\t\t\tthis.wsCtl.timer = setTimeout(() => {\n\t\t\t\tthis.wsCtl.allow = true;\n\t\t\t\tclearTimeout(this.wsCtl.timer);\n\t\t\t\tthis.wsCtl.timer = null;\n\t\t\t}, 1000);\n\t\t\ttry{\n\t\t\t\tthis.$ws.ws.send(JSON.stringify({\n\t\t\t\t\tself:{\n\t\t\t\t\t\tname:this.me.nickname,\n\t\t\t\t\t\ticon:JSON.stringify(this.me.avatar).length >100 ? \"null\": this.me.avatar,\n\t\t\t\t\t\tid:this.me.id\n\t\t\t\t\t},\n\t\t\t\t\ttarget:{\n\t\t\t\t\t\tid:this.selectInfo.id,\n\t\t\t\t\t\tname:this.selectInfo.name,\n\t\t\t\t\t\ticon:JSON.stringify(this.selectInfo.icon).length >100 ? \"null\": this.selectInfo.icon\n\t\t\t\t\t},\n\t\t\t\t\ttime:new Date().toLocaleString(),\n\t\t\t\t\ttype:\"alone\",\n\t\t\t\t\t// this_info:this.selectInfo.msg,\n\t\t\t\t\t// target_info:this.target_info,\n\t\t\t\t\tcontent:inputMsg,\n\t\t\t\t\trecvID:this.selectInfo.id\n\t\t\t\t}));\n\t\t\t\tthis.moeScroll();\n\t\t\t\t\n\t\t\t}catch(e){\n\t\t\t\tthis.selectInfo.msg.push({\"type\":\"this\",\"text\":\"(发送失败)\"+this.inputRedis[this.selectInfo.id]})\n\t\t\t\t// this.$ws.connect_sock(this.me.id)\n\t\t\t\t// this.$messge.warning(\"发送失败\")\n\t\t\t}\n\t\t},\n\t\trecvMsg(){\n\t\t\tif (this.$ws.ws){\n\t\t\t\t// 机器人默认在线,除非用户断开了与后台的连接\n\t\t\t\tthis.chatInfo[\"-1\"][\"online\"] = true\n\t\t\t\tlet msgInfo = {type:\"token\",_id:this.me.id}\n\t\t\t\tthis.$ws.ws.send(JSON.stringify(msgInfo))\n\t\t\t\t\n\t\t\t\tthis.$ws.ws.onmessage = async (res)=>{\n\t\t\t\t\tlet data = JSON.parse(res.data)\n\t\t\t\t\t// console.log(\"res:\",data); \n\t\t\t\t\t// 捕获系统消息并跳出\n\t\t\t\t\tif(data.type==\"system\"){\n\t\t\t\t\t\t// 将匹配的内容结果传递给api,\n\t\t\t\t\t\tlet info = await Application.getMsg(Utils.filterStr(data.content))\n\t\t\t\t\t\tthis.chatInfo[\"-1\"].msg.push({type:\"sys\",text:info.data,time:data.time});\n\t\t\t\t\t\tthis.moeScroll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(data.type==\"token\"){\n\t\t\t\t\t\tconst info = {};\n\t\t\t\t\t\tfor(let i in data.content){\n\t\t\t\t\t\t\tlet cls = data.content[i].recvId == this.me.id ? \"target\" : \"this\";\n\t\t\t\t\t\t\t// 如果信息列表没有这个用户的数据\n\t\t\t\t\t\t\tlet keyID = data.content[i].sendId;\n\t\t\t\t\t\t\tif(info[keyID]==null){\n\t\t\t\t\t\t\t\tlet name = JSON.parse(data.content[i].self).name;\n\t\t\t\t\t\t\t\tlet icon = JSON.parse(data.content[i].self).icon;\n\t\t\t\t\t\t\t\t// 如果发送者的id是当前用户, 那么将写入数据的key修改为接收者的key\n\t\t\t\t\t\t\t\tif(parseInt(this.me.id) == parseInt(keyID)){\n\t\t\t\t\t\t\t\t\tkeyID = data.content[i].recvId;\n\t\t\t\t\t\t\t\t\tname = JSON.parse(data.content[i].target).name;\n\t\t\t\t\t\t\t\t\ticon = JSON.parse(data.content[i].target).icon;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinfo[keyID] = keyID\n\t\t\t\t\t\t\t\tlet msg = [{type:cls , text:data.content[i].content,time:data.content[i].timestamp}]\n\t\t\t\t\t\t\t\tif(this.chatInfo[keyID] && this.chatInfo[keyID][\"msg\"]){\n\t\t\t\t\t\t\t\t\tthis.chatInfo[keyID][\"msg\"].push(msg[0]);\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tthis.$set(this.chatInfo,keyID,this.packMsg(keyID,name,\"alone\",data.content[i].time,icon,msg,\"null\",0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.chatInfo[keyID][\"msg\"].push({type:cls , text:data.content[i].content, time:data.content[i].timestamp});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.chatInfo[keyID].isRead = data.readList.indexOf(\"^\"+keyID+\"&\") != -1 ? 0 : 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(data.ContactID !=-1){\n\t\t\t\t\t\t\tthis.selectInfo = this.chatInfo[data.ContactID];\n\t\t\t\t\t\t\tthis.selectInfo.isRead = 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlet readList = data.readList.replace(/&/g,\"\").split(\"^\").filter(item =>item!=\"\")\n\t\t\t\t\t\t\tif(readList.length){\n\t\t\t\t\t\t\t\tthis.selectInfo = this.chatInfo[readList[0]];\n\t\t\t\t\t\t\t\tif(this.selectInfo && !this.selectInfo.isRead){\n\t\t\t\t\t\t\t\t\tthis.$ws.ws.send(JSON.stringify({type:\"state\",readID:this.selectInfo.id}))\n\t\t\t\t\t\t\t\t\tthis.selectInfo.isRead = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 心跳包\n\t\t\t\t\t\tthis.hartCheck(this.chatInfo)\n\t\t\t\t\t\tthis.hart.timeObj = setInterval(() => {\n\t\t\t\t\t\t\tthis.hartCheck(this.chatInfo)\n\t\t\t\t\t\t}, this.hart.timer*1000);\n\t\t\t\t\t}\n\t\t\t\t\telse if (data.type==\"alone\"){\n\t\t\t\t\t\tif(this.chatInfo[data.self.id]){\n\t\t\t\t\t\t\tthis.chatInfo[data.self.id].msg.push({\"type\":\"target\",\"text\":data.content,time:data.time});\n\t\t\t\t\t\t\tthis.chatInfo[data.self.id].isRead = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// 解决无法实时刷新dom\n\t\t\t\t\t\t\tthis.$set(this.chatInfo,data.self.id,{\"id\":data.self.id,\"name\":data.self.nickName,\"type\":\"user\",\"time\":data.time,\n\t\t\t\t\t\t\t\t\"icon\":data.self.icon,\"msg\":[{type:\"target\",text:data.content ,time:data.time}],\"head\":null,\"isRead\":0});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}else if  (data.type ===\"ping\"){\n\t\t\t\t\t\tthis.hart.check = {}\n\t\t\t\t\t\tif (data.content.length){\n\t\t\t\t\t\t\tlet info = data.content.split(\"|\")\n\t\t\t\t\t\t\tfor(let i =0;i< info.length-1;i++){\n\t\t\t\t\t\t\t\tthis.hart.check[info[i]] = true\n\t\t\t\t\t\t\t\tthis.$set(this.chatInfo[info[i]],\"online\",true)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.moeScroll();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmoeScroll(time=200){\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar container = this.$el.querySelector(\".content\");\n\t\t\t\tcontainer.scrollTop = container.scrollHeight;\n\t\t\t}, time);\n\t\t},\n\t\tgetBrowserType() {\n\t\t\t// 获取浏览器 userAgent\n\t\t\tvar ua = navigator.userAgent\n\t\t\t// 是否为 Opera\n\t\t\tif (ua.indexOf('Opera') > -1) { return 'Opera' }\n\n\t\t\t// 是否为 IE\n\t\t\tvar isIE = (ua.indexOf('compatible') > -1) && (ua.indexOf('MSIE') > -1) && !isOpera\n\t\t\tvar isIE11 = (ua.indexOf('Trident') > -1) && (ua.indexOf(\"rv:11.0\") > -1)\n\t\t\t// 返回结果\n\t\t\tif (isIE11) { return 'IE11'\n\t\t\t} else if (isIE) {return \"IE\"}\n\t\t\t// 是否为 Edge\n\t\t\tif (ua.indexOf(\"Edg\") > -1) { return 'Edge' }\n\t\t\t// 是否为 Firefox\n\t\t\tif (ua.indexOf(\"Firefox\") > -1) { return 'Firefox' }\n\t\t\t// 是否为 Safari\n\t\t\tif ((ua.indexOf(\"Safari\") > -1) && (ua.indexOf(\"Chrome\") == -1)) { return \"Safari\" }\n\t\t\t// 是否为 Chrome\n\t\t\tif ((ua.indexOf(\"Chrome\") > -1) && (ua.indexOf(\"Safari\") > -1) && (ua.indexOf(\"Edge\") == -1)) { return 'Chrome' }\n\t\t\t// 是否为 UC\n\t\t\tif (ua.indexOf(\"UBrowser\") > -1) { return 'UC' }\n\t\t\t// 是否为 QQ\n\t\t\tif (ua.indexOf(\"QQBrowser\") > -1) { return 'QQ' }\n\t\t\t// 都不是\n\t\t\treturn \"未知设备\";\n\t\t},\n\t\t// 封装信息体\n\t\tpackMsg(id,name,type,time,icon,msg,header=null,isRead=0){\n\t\t\treturn {id:id,name:name,type:type,time:time,icon:icon ==null?this.defaultImg:icon,msg:msg,header:header,isRead:isRead};\n\t\t},\n\t\t// 心跳包检测\n\t\thartCheck(friends){\n\t\t\t// 如果与服务器的连接断开了\n\t\t\tif(this.$ws.ws.readyState === this.$ws.ws.CLOSED){\n\t\t\t\tthis.$message.warning(\"聊天服务器已断开\")\n\t\t\t\tclearInterval(this.hart.timeObj);\n\t\t\t\t// 将所有用户设为离线\n\t\t\t\tfor(let i in this.chatInfo){\n\t\t\t\t\tthis.chatInfo[i][\"online\"] = false\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\t}\n\t\n\t\t\tlet friends_list = \"\"\n\t\t\tfor (const iterator in friends) {\n\t\t\t\tif (parseInt(iterator) >0){\n\t\t\t\t\tif(!this.hart.check[iterator]){\n\t\t\t\t\t\tthis.$set(friends[iterator],\"online\",false)\n\t\t\t\t\t}\n\t\t\t\t\tfriends_list += iterator+\"|\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$ws.ws.send(JSON.stringify({type:this.hart.type,friends_list}))\n\t\t}\n\t},\n\tasync mounted() {\n\t\t// this.$message.closeAll();\n\t\t// this.hartCheck(this.chatInfo);\n\t\tthis.me = store.getters.user;\n\t\tthis.token_msg = {\n\t\t\tid:this.me.id,\n\t\t\tname:this.me.name,\n\t\t\ticon:this.me.acatar,\n\t\t\tmsg:[],\n\t\t\theader:\"null\",\n\t\t\tisRead:1,\n\t\t\ttype:\"contact\",\n\t\t\ttime:new Date().toLocaleString()\n\t\t}\n\t\t// 默认有2个消息\n\t\tthis.chatInfo[\"-1\"] = this.packMsg(\"-1\",\"校企直聘智能机\",\"sys\",new Date().toLocaleString(),require(\"@/assets/image/user/Cat.png\")\n\t\t\t,[{\"type\":\"sys\",\"text\":\"\\\n\t\t\t\t<div class='sys-msg'>\\\n\t\t\t\t\t<h2>登录操作通知</h2>\\\n\t\t\t\t\t<div class='describe'>[\"+this.me.nickname+\"]欢迎回来校企招聘系统</div>\\\n\t\t\t\t\t<div class='info'>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span>设备/平台</span>\\\n\t\t\t\t\t\t\t<span>\"+this.getBrowserType()+\"浏览器</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span>登录方式</span>\\\n\t\t\t\t\t\t\t<span>普通登录</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span>当前时间</span>\\\n\t\t\t\t\t\t\t<span>\"+new Date().toLocaleString()+\"</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t\t<div>\\\n\t\t\t\t\t\t\t<span></span>\\\n\t\t\t\t\t\t\t<span>如有疑问,可以对我说噢!</span>\\\n\t\t\t\t\t\t</div>\\\n\t\t\t\t\t</div>\\\n\t\t\t\t</div>\\\n\t\t\t\",time:new Date().toLocaleString()}],\"登录操作通知\",1)\n\n\t\tthis.chatInfo[\"1\"] = this.packMsg(\"1\",\"系统管理员\",\"alone\",new Date().toLocaleString(),require(\"@/assets/image/user/Cat.png\"),[{\"type\":\"target\",\"text\":\"反馈请留言\",time:new Date().toLocaleString()}],\"\",1)\n\t\tthis.selectInfo = this.chatInfo[\"-1\"];\n\t\tif(this.$ws.ws.readyState!=1)return;\n\t \tawait this.recvMsg();\n\t},\n\tbeforeDestroy() {\n\t\tclearTimeout(this.wsCtl.timer);\n\t\tclearInterval(this.hart.timeObj);\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n\t.ws-msg-form {\n\t\twidth: 800px;\n\t\theight: 700px;\n\t\timg {\n\t\t\tuser-select: none;\n\t\t\tpointer-events: none;\n\t\t\tborder: 1px solid #ffffff;\n\t\t}\n\t}\n\t.msg-content {\n\t\tmargin-left: 10px;\n\t\tdisplay: inline-block;\n\t\twidth: 100%;\n\t\theight: 80%;\n\t\tborder: 1px solid rgb(143, 141, 141);\n\t\tbackground-color: transparent !important;\n\t\tborder-radius: 5px;\n\t\toverflow: hidden;\n\t\tposition: relative;\n\t}\n\t.msg-title {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tbackground-color: rgba(39, 39, 39, 0.219);\n\t\theight: 30px;\n\t\tline-height: 30px;\n\t}\n\t.msg-content .left {\n\t\tmargin-top: 30px;\n\t\twidth: 200px;\n\t\theight: 95%;\n\t\tborder-right: 1px solid rgb(143, 141, 141);\n\t\toverflow: auto;\n\t\toverflow-x: hidden;\n\t\tdisplay: inline-block;\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: 5px;\n\t\t}\n\n\t\t&::-webkit-scrollbar-button {\n\t\t\tdisplay: none;\n\t\t}\n\t\t&::-webkit-scrollbar-thumb{\n\t\t\tbackground-color: rgba(124, 124, 124, 0.438);\n\t\t\tborder-radius: 5px;\n\t\t}\n\n\t\t.item {\n\t\t\tposition: relative;\n\t\t\theight: 78px;\n\t\t\tpadding-left: 20px;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tcursor: pointer;\n\t\t\tuser-select: none;\n\n\t\t\t&:hover {\n\t\t\t\tbackground-color: rgba(146, 146, 146, 0.3);\n\t\t\t}\n\n\t\t\t.icon {\n\t\t\t\twidth: 40px !important;\n\t\t\t\theight: 40px !important;\n\t\t\t\tborder-radius: 40px;\n\t\t\t}\n\t\t\tdiv {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop:20px;\n\t\t\t\tleft: 65px;\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t\t.msg {\n\t\t\t\ttop: 45px;\n\t\t\t\tfont-size: 12px;\n\t\t\t\tcolor: rgb(114, 114, 114);\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tmax-width: 130px;\n\t\t\t}\n\t\t\t.newTip,\n\t\t\t.online {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth:  10px;\n\t\t\t\theight: 10px;\n\t\t\t\tbackground: red;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 10px;\n\t\t\t\ttop: 20px;\n\t\t\t}\n\t\t\t.online {\n\t\t\t\tbackground-color: greenyellow;\n\t\t\t\ttop: 50px;\n\t\t\t\tleft: 20px;\n\t\t\t}\n\t\t\t.chat-time {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tfont-size: 13px;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 5px;\n\t\t\t\ttop: 5px;\n\t\t\t\topacity: .7;\n\t\t\t}\n\t\t}\n\t}\n\t.msg-content .right {\n\t\tdisplay: inline-block !important;\n\t\theight: 94% !important;\n\t\twidth: 600px !important;\n\t\tposition: absolute !important;\n\t\tmargin-top: 30px;\n\t\t.form {\n\t\t\tposition: relative;\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t\t.content {\n\t\t\t\theight: 385px;\n\t\t\t\toverflow: auto;\n\t\t\t\tpadding: 0 10px;\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0.03) !important;\n\n\t\t\t\t&::-webkit-scrollbar{\n\t\t\t\t\toverflow-y: hidden;\n\t\t\t\t}\n\t\t\t\t.msg-item {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmargin: 10px 0;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\ttransition: all .5s;\n\t\t\t\t\t>div img {\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\twidth:  35px;\n\t\t\t\t\t\theight: 35px;\n\t\t\t\t\t}\n\t\t\t\t\tspan {\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\tbackground: white;\n\t\t\t\t\t\tpadding: 10px 15px;\n\t\t\t\t\t\tfont-size: 15px;\n\t\t\t\t\t\tmax-width: 350px;\n\t\t\t\t\t\tmargin: 10px 0;\n\t\t\t\t\t\tword-break: break-word;\n\t\t\t\t\t}\n\n\t\t\t\t\t.tip {\n\t\t\t\t\t\twidth: 400px;\n\t\t\t\t\t\theight: 260px;\n\t\t\t\t\t\tborder-radius: 10px;\n\t\t\t\t\t\tbackground-color: white;\n\t\t\t\t\t\tmargin-left: 60px;\n\t\t\t\t\t}\n\t\t\t\t\t.sys,\n\t\t\t\t\t.target {\n\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\tspan {\n\t\t\t\t\t\t\tborder-radius: 20px;\n\t\t\t\t\t\t\tborder-top-left-radius: 0;\n\t\t\t\t\t\t\tmargin-left: 35px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\timg {\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\tleft: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t.this {\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\tfloat: right;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\tspan {\n\t\t\t\t\t\t\tfloat: right;\n\t\t\t\t\t\t\tbackground-color: rgb(128,185,242);\n\t\t\t\t\t\t\tmargin-right: 45px;\n\t\t\t\t\t\t\tcolor: white;\n\t\t\t\t\t\t\tborder-radius: 20px;\n\t\t\t\t\t\t\tborder-top-right-radius: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\timg {\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\tright: 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t.birth-anim {\n\t\t\t\t\t\tanimation-name: birth;\n\t\t\t\t\t\tanimation-duration: .5s;\n\t\t\t\t\t\tanimation-iteration-count:1\n\t\t\t\t\t}\n\t\t\t\t\t// 样式穿透\n\t\t\t\t\t::v-deep .sys-msg {\n\t\t\t\t\t\t>* {\n\t\t\t\t\t\t\tmargin: 15px 0;\n\t\t\t\t\t\t\tcolor: #505050;\n\t\t\t\t\t\t\tfont-size: 15px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\th2 {\n\t\t\t\t\t\t\tfont-weight: 700;\n\t\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.info {\n\t\t\t\t\t\t\twidth: 400px;\n\t\t\t\t\t\t\tspan {\n\t\t\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tspan:nth-child(1){\n\t\t\t\t\t\t\t\twidth: 100px !important;\n\t\t\t\t\t\t\t\topacity: .7;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t@keyframes birth {\n\t\t\t\t\t\t0%   {transform: translatey(50px);}\n\t\t\t\t\t\t100% {transform: translatey(0px);}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.msg-footer {\n\t\t\tposition: relative;\n\t\t\tborder-top: 1px solid rgb(143, 141, 141);\n\t\t\ttextarea {\n\t\t\t\tresize: none;\n\t\t\t\toutline: none;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100px;\n\t\t\t\tborder: none;\n\t\t\t}\n\t\t\t.send {\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 10px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.select-style {\n\t\tbackground-color: rgba(146, 146, 146, 0.3);\n\t}\n\n\t\n.rou-btn {\n\tmargin-top: 5px;\n    display: inline-block;\n    border: 1px solid cornflowerblue;\n    color: cornflowerblue;\n    border-radius: 5px;\n    padding: 3px 5px;\n\n\t&:hover{\n\t\tborder: 1px solid teal;\n\t\tcolor: teal;\n\t}\n}\n\n\n\n</style>"],"mappings":"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","ignoreList":[]}]}