{"remainingRequest":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\graduateproject\\recruit\\recruit-web\\src\\plugin\\lin-cms-ui\\view\\data\\tag\\tag.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\graduateproject\\recruit\\recruit-web\\src\\plugin\\lin-cms-ui\\view\\data\\tag\\tag.vue","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\babel.config.js","mtime":1682848612000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\graduateproject\\recruit\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  name: '',\n  components: {},\n  data: function data() {\n    return {\n      items: [{\n        type: '',\n        label: '标签一'\n      }, {\n        type: 'success',\n        label: '标签二'\n      }, {\n        type: 'info',\n        label: '标签三'\n      }, {\n        type: 'danger',\n        label: '标签四'\n      }, {\n        type: 'warning',\n        label: '标签五'\n      }],\n      dynamicTags: ['标签一', '标签二', '标签三'],\n      inputVisible: false,\n      inputValue: '',\n      tags: [{\n        name: '标签一',\n        type: ''\n      }, {\n        name: '标签二',\n        type: 'success'\n      }, {\n        name: '标签三',\n        type: 'info'\n      }, {\n        name: '标签四',\n        type: 'warning'\n      }, {\n        name: '标签五',\n        type: 'danger'\n      }],\n      text: '',\n      /* eslint-disable */\n      base: \"     \\n        <el-tag>\\u6807\\u7B7E\\u4E00</el-tag>\\n        <el-tag type=\\\"success\\\">\\u6807\\u7B7E\\u4E8C</el-tag>\\n        <el-tag type=\\\"info\\\">\\u6807\\u7B7E\\u4E09</el-tag>\\n        <el-tag type=\\\"warning\\\">\\u6807\\u7B7E\\u56DB</el-tag>\\n        <el-tag type=\\\"danger\\\">\\u6807\\u7B7E\\u4E94</el-tag>\",\n      closable: \"\\n       <el-tag\\n        v-for=\\\"tag in tags\\\"\\n        :key=\\\"tag.name\\\"\\n        closable\\n        @close=\\\"handleCloseTag(tag)\\\"\\n        :type=\\\"tag.type\\\">\\n        {{tag.name}}\\n      </el-tag>\\n\\n      <script>\\n        export default {\\n          data() {\\n            return {\\n              tags: [\\n                { name: '\\u6807\\u7B7E\\u4E00', type: '' },\\n                { name: '\\u6807\\u7B7E\\u4E8C', type: 'success' },\\n                { name: '\\u6807\\u7B7E\\u4E09', type: 'info' },\\n                { name: '\\u6807\\u7B7E\\u56DB', type: 'warning' },\\n                { name: '\\u6807\\u7B7E\\u4E94', type: 'danger' }\\n              ]\\n            };\\n          methods: {\\n            handleCloseTag(tag) {\\n              this.tags.splice(this.tags.indexOf(tag), 1);\\n            },\\n          }\\n        }\\n      </script>\",\n      dynamic: \"\\n           <el-tag\\n            :key=\\\"tag\\\"\\n            v-for=\\\"tag in dynamicTags\\\"\\n            closable\\n            :disable-transitions=\\\"false\\\"\\n            @close=\\\"handleClose(tag)\\\">\\n            {{tag}}\\n          </el-tag>\\n          <el-input\\n            class=\\\"input-new-tag\\\"\\n            v-if=\\\"inputVisible\\\"\\n            v-model=\\\"inputValue\\\"\\n            ref=\\\"saveTagInput\\\"\\n            size=\\\"small\\\"\\n            @keyup.enter.native=\\\"handleInputConfirm\\\"\\n            @blur=\\\"handleInputConfirm\\\"\\n          >\\n          </el-input>\\n          <el-button v-else class=\\\"button-new-tag\\\" size=\\\"small\\\" @click=\\\"showInput\\\">+ New Tag</el-button>\\n\\n          <style>\\n            .el-tag + .el-tag {\\n              margin-left: 10px;\\n            }\\n            .button-new-tag {\\n              margin-left: 10px;\\n              height: 32px;\\n              line-height: 30px;\\n              padding-top: 0;\\n              padding-bottom: 0;\\n            }\\n            .input-new-tag {\\n              width: 90px;\\n              margin-left: 10px;\\n              vertical-align: bottom;\\n            }\\n            .input-new-tag ::v-deep .el-input__inner {\\n              height: 24px;\\n            }\\n          </style>\\n\\n          <script>\\n            export default {\\n              data() {\\n                return {\\n                  dynamicTags: ['\\u6807\\u7B7E\\u4E00', '\\u6807\\u7B7E\\u4E8C', '\\u6807\\u7B7E\\u4E09'],\\n                  inputVisible: false,\\n                  inputValue: ''\\n                };\\n              },\\n              methods: {\\n                handleClose(tag) {\\n                  this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\\n                },\\n\\n                showInput() {\\n                  this.inputVisible = true;\\n                  this.$nextTick(_ => {\\n                    this.$refs.saveTagInput.$refs.input.focus();\\n                  });\\n                },\\n\\n                handleInputConfirm() {\\n                  let inputValue = this.inputValue;\\n                  if (inputValue) {\\n                    this.dynamicTags.push(inputValue);\\n                  }\\n                  this.inputVisible = false;\\n                  this.inputValue = '';\\n                }\\n              }\\n            }\\n          </script>\",\n      size: \"\\n            <el-tag closable>\\u9ED8\\u8BA4\\u6807\\u7B7E</el-tag>\\n            <el-tag size=\\\"medium\\\" closable>\\u4E2D\\u7B49\\u6807\\u7B7E</el-tag>\\n            <el-tag size=\\\"small\\\" closable>\\u5C0F\\u578B\\u6807\\u7B7E</el-tag>\\n            <el-tag size=\\\"mini\\\" closable>\\u8D85\\u5C0F\\u6807\\u7B7E</el-tag>\\n            \",\n      theme: \"<div class=\\\"tag-group\\\">\\n              <span class=\\\"tag-group__title\\\">Dark</span>\\n              <el-tag\\n                v-for=\\\"item in items\\\"\\n                :key=\\\"item.label\\\"\\n                :type=\\\"item.type\\\"\\n                effect=\\\"dark\\\">\\n                {{ item.label }}\\n              </el-tag>\\n            </div>\\n            <div class=\\\"tag-group\\\">\\n              <span class=\\\"tag-group__title\\\">Plain</span>\\n              <el-tag\\n                v-for=\\\"item in items\\\"\\n                :key=\\\"item.label\\\"\\n                :type=\\\"item.type\\\"\\n                effect=\\\"plain\\\">\\n                {{ item.label }}\\n              </el-tag>\\n            </div>\\n\\n            <script>\\n              export default {\\n                data() {\\n                  return {\\n                    items: [\\n                      { type: '', label: '\\u6807\\u7B7E\\u4E00' },\\n                      { type: 'success', label: '\\u6807\\u7B7E\\u4E8C' },\\n                      { type: 'info', label: '\\u6807\\u7B7E\\u4E09' },\\n                      { type: 'danger', label: '\\u6807\\u7B7E\\u56DB' },\\n                      { type: 'warning', label: '\\u6807\\u7B7E\\u4E94' }\\n                    ]\\n                  }\\n                }\\n              }\\n            </script>\"\n    };\n  },\n  // 计算属性设置\n  computed: {},\n  // 数据变更监听\n  watch: {},\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    handleInputConfirm: function handleInputConfirm() {\n      var inputValue = this.inputValue;\n      if (inputValue) {\n        this.dynamicTags.push(inputValue);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    },\n    handleCloseTag: function handleCloseTag(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    handleClose: function handleClose(tag) {\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n    },\n    showInput: function showInput() {\n      var _this = this;\n      this.inputVisible = true;\n      this.$nextTick(function () {\n        _this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    // 执行获取数据等初始化动作\n    init: function init() {}\n  }\n};",{"version":3,"names":["name","components","data","items","type","label","dynamicTags","inputVisible","inputValue","tags","text","base","closable","dynamic","size","theme","computed","watch","mounted","init","methods","handleInputConfirm","push","handleCloseTag","tag","splice","indexOf","handleClose","showInput","_this","$nextTick","$refs","saveTagInput","input","focus"],"sources":["src/plugin/lin-cms-ui/view/data/tag/tag.vue"],"sourcesContent":["<template>\n  <div class=\"lin-container\">\n    <div class=\"lin-title\">Tag 标签</div>\n    <div class=\"lin-wrap-ui\">\n      <el-card style=\"margin-bottom:50px;\">\n        <div slot=\"header\"><span>基础用法</span></div>\n        <el-row>\n          <div>\n            <el-tag>标签一</el-tag>\n            <el-tag type=\"success\">标签二</el-tag>\n            <el-tag type=\"info\">标签三</el-tag>\n            <el-tag type=\"warning\">标签四</el-tag>\n            <el-tag type=\"danger\">标签五</el-tag>\n          </div>\n        </el-row>\n        <el-collapse>\n          <el-collapse-item title=\"查看代码\" name=\"2\">\n            <div style=\"white-space: pre-wrap;\">{{ base }}</div>\n          </el-collapse-item>\n        </el-collapse>\n      </el-card>\n      <el-card style=\"margin-bottom:50px;\">\n        <div slot=\"header\"><span>可移除标签</span></div>\n        <el-row>\n          <div>\n            <el-tag v-for=\"tag in tags\" :key=\"tag.name\" closable @close=\"handleCloseTag(tag)\" :type=\"tag.type\">\n              {{ tag.name }}\n            </el-tag>\n          </div>\n        </el-row>\n        <el-collapse class=\"test\" style=\"color:red;\">\n          <el-collapse-item title=\"查看代码\" name=\"2\">\n            <div style=\"white-space: pre-wrap;\">{{ closable }}</div>\n          </el-collapse-item>\n        </el-collapse>\n      </el-card>\n      <el-card style=\"margin-bottom:50px;\">\n        <div slot=\"header\"><span>动态编辑标签</span></div>\n        <el-row>\n          <div>\n            <el-tag\n              :key=\"tag\"\n              v-for=\"tag in dynamicTags\"\n              closable\n              :disable-transitions=\"false\"\n              @close=\"handleClose(tag)\"\n            >\n              {{ tag }}\n            </el-tag>\n            <el-input\n              class=\"input-new-tag\"\n              v-model=\"inputValue\"\n              v-if=\"inputVisible\"\n              ref=\"saveTagInput\"\n              size=\"small\"\n              @keyup.enter.native=\"handleInputConfirm\"\n              @blur=\"handleInputConfirm\"\n            >\n            </el-input>\n            <i v-else class=\"el-icon-circle-plus button-new-tag\" @click=\"showInput\"></i>\n            <!-- <el-button  class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button> -->\n          </div>\n        </el-row>\n        <el-collapse class=\"test\" style=\"color:red;\">\n          <el-collapse-item title=\"查看代码\" name=\"2\">\n            <div style=\"white-space: pre-wrap;\">{{ dynamic }}</div>\n          </el-collapse-item>\n        </el-collapse>\n      </el-card>\n\n      <el-card style=\"margin-bottom:50px;\">\n        <div slot=\"header\"><span>不同尺寸</span></div>\n        <el-row>\n          <div>\n            <el-tag closable>默认标签</el-tag>\n            <el-tag size=\"medium\" closable>中等标签</el-tag>\n            <el-tag size=\"small\" closable>小型标签</el-tag>\n            <el-tag size=\"mini\" closable>超小标签</el-tag>\n          </div>\n        </el-row>\n        <el-collapse>\n          <el-collapse-item title=\"查看代码\" name=\"2\">\n            <div style=\"white-space: pre-wrap;\">{{ size }}</div>\n          </el-collapse-item>\n        </el-collapse>\n      </el-card>\n\n      <el-card style=\"margin-bottom:50px;\">\n        <div slot=\"header\"><span>不同主题,通过设置effect属性来改变主题，默认为 light</span></div>\n        <el-row>\n          <div class=\"block\">\n            <span class=\"demonstration\">Dark主题</span>\n            <div class=\"tag-group\">\n              <el-tag v-for=\"item in items\" :key=\"item.label\" :type=\"item.type\" effect=\"dark\">\n                {{ item.label }}\n              </el-tag>\n            </div>\n          </div>\n          <div class=\"block\">\n            <span class=\"demonstration\">Plain主题</span>\n            <div class=\"tag-group\">\n              <el-tag v-for=\"item in items\" :key=\"item.label\" :type=\"item.type\" effect=\"plain\">\n                {{ item.label }}\n              </el-tag>\n            </div>\n          </div>\n        </el-row>\n\n        <el-collapse>\n          <el-collapse-item title=\"查看代码\" name=\"2\">\n            <div style=\"white-space: pre-wrap;\">{{ theme }}</div>\n          </el-collapse-item>\n        </el-collapse>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: '',\n  components: {},\n  data() {\n    return {\n      items: [\n        { type: '', label: '标签一' },\n        { type: 'success', label: '标签二' },\n        { type: 'info', label: '标签三' },\n        { type: 'danger', label: '标签四' },\n        { type: 'warning', label: '标签五' },\n      ],\n      dynamicTags: ['标签一', '标签二', '标签三'],\n      inputVisible: false,\n      inputValue: '',\n      tags: [\n        { name: '标签一', type: '' },\n        { name: '标签二', type: 'success' },\n        { name: '标签三', type: 'info' },\n        { name: '标签四', type: 'warning' },\n        { name: '标签五', type: 'danger' },\n      ],\n      text: '',\n      /* eslint-disable */\n      base: `     \n        <el-tag>标签一</el-tag>\n        <el-tag type=\"success\">标签二</el-tag>\n        <el-tag type=\"info\">标签三</el-tag>\n        <el-tag type=\"warning\">标签四</el-tag>\n        <el-tag type=\"danger\">标签五</el-tag>`,\n      closable: `\n       <el-tag\n        v-for=\"tag in tags\"\n        :key=\"tag.name\"\n        closable\n        @close=\"handleCloseTag(tag)\"\n        :type=\"tag.type\">\n        {{tag.name}}\n      </el-tag>\n\n      <script>\n        export default {\n          data() {\n            return {\n              tags: [\n                { name: '标签一', type: '' },\n                { name: '标签二', type: 'success' },\n                { name: '标签三', type: 'info' },\n                { name: '标签四', type: 'warning' },\n                { name: '标签五', type: 'danger' }\n              ]\n            };\n          methods: {\n            handleCloseTag(tag) {\n              this.tags.splice(this.tags.indexOf(tag), 1);\n            },\n          }\n        }\n      <\\/script>`,\n      dynamic: `\n           <el-tag\n            :key=\"tag\"\n            v-for=\"tag in dynamicTags\"\n            closable\n            :disable-transitions=\"false\"\n            @close=\"handleClose(tag)\">\n            {{tag}}\n          </el-tag>\n          <el-input\n            class=\"input-new-tag\"\n            v-if=\"inputVisible\"\n            v-model=\"inputValue\"\n            ref=\"saveTagInput\"\n            size=\"small\"\n            @keyup.enter.native=\"handleInputConfirm\"\n            @blur=\"handleInputConfirm\"\n          >\n          </el-input>\n          <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\n\n          <style>\n            .el-tag + .el-tag {\n              margin-left: 10px;\n            }\n            .button-new-tag {\n              margin-left: 10px;\n              height: 32px;\n              line-height: 30px;\n              padding-top: 0;\n              padding-bottom: 0;\n            }\n            .input-new-tag {\n              width: 90px;\n              margin-left: 10px;\n              vertical-align: bottom;\n            }\n            .input-new-tag ::v-deep .el-input__inner {\n              height: 24px;\n            }\n          </style>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  dynamicTags: ['标签一', '标签二', '标签三'],\n                  inputVisible: false,\n                  inputValue: ''\n                };\n              },\n              methods: {\n                handleClose(tag) {\n                  this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n                },\n\n                showInput() {\n                  this.inputVisible = true;\n                  this.$nextTick(_ => {\n                    this.$refs.saveTagInput.$refs.input.focus();\n                  });\n                },\n\n                handleInputConfirm() {\n                  let inputValue = this.inputValue;\n                  if (inputValue) {\n                    this.dynamicTags.push(inputValue);\n                  }\n                  this.inputVisible = false;\n                  this.inputValue = '';\n                }\n              }\n            }\n          <\\/script>`,\n      size: `\n            <el-tag closable>默认标签</el-tag>\n            <el-tag size=\"medium\" closable>中等标签</el-tag>\n            <el-tag size=\"small\" closable>小型标签</el-tag>\n            <el-tag size=\"mini\" closable>超小标签</el-tag>\n            `,\n      theme: `<div class=\"tag-group\">\n              <span class=\"tag-group__title\">Dark</span>\n              <el-tag\n                v-for=\"item in items\"\n                :key=\"item.label\"\n                :type=\"item.type\"\n                effect=\"dark\">\n                {{ item.label }}\n              </el-tag>\n            </div>\n            <div class=\"tag-group\">\n              <span class=\"tag-group__title\">Plain</span>\n              <el-tag\n                v-for=\"item in items\"\n                :key=\"item.label\"\n                :type=\"item.type\"\n                effect=\"plain\">\n                {{ item.label }}\n              </el-tag>\n            </div>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    items: [\n                      { type: '', label: '标签一' },\n                      { type: 'success', label: '标签二' },\n                      { type: 'info', label: '标签三' },\n                      { type: 'danger', label: '标签四' },\n                      { type: 'warning', label: '标签五' }\n                    ]\n                  }\n                }\n              }\n            <\\/script>`,\n    }\n  },\n  // 计算属性设置\n  computed: {},\n  // 数据变更监听\n  watch: {},\n  mounted() {\n    this.init()\n  },\n  methods: {\n    handleInputConfirm() {\n      let inputValue = this.inputValue\n      if (inputValue) {\n        this.dynamicTags.push(inputValue)\n      }\n      this.inputVisible = false\n      this.inputValue = ''\n    },\n    handleCloseTag(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1)\n    },\n    handleClose(tag) {\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1)\n    },\n    showInput() {\n      this.inputVisible = true\n      this.$nextTick(() => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      })\n    },\n    // 执行获取数据等初始化动作\n    init() {},\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../../assets/style/container.scss';\n.block {\n  padding: 30px 0;\n  text-align: center;\n  border-right: 1px solid #eff2f6;\n  display: inline-block;\n  width: 49%;\n  box-sizing: border-box;\n\n  &:last-child {\n    border-right: none;\n  }\n}\n\n.demonstration {\n  display: block;\n  color: #8492a6;\n  font-size: 14px;\n  margin-bottom: 20px;\n}\n.el-tag + .el-tag {\n  margin-left: 10px;\n}\n.button-new-tag {\n  cursor: pointer;\n  vertical-align: middle;\n  color: #3963bc;\n  margin-left: 10px;\n  font-size: 24px;\n  height: 24px;\n  line-height: 24px;\n}\n.input-new-tag {\n  width: 90px;\n  margin-left: 10px;\n  vertical-align: bottom;\n}\n.input-new-tag ::v-deep .el-input__inner {\n  height: 24px;\n}\n</style>\n"],"mappings":"AAuHA;EACAA,IAAA;EACAC,UAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACAC,WAAA;MACAC,YAAA;MACAC,UAAA;MACAC,IAAA,GACA;QAAAT,IAAA;QAAAI,IAAA;MAAA,GACA;QAAAJ,IAAA;QAAAI,IAAA;MAAA,GACA;QAAAJ,IAAA;QAAAI,IAAA;MAAA,GACA;QAAAJ,IAAA;QAAAI,IAAA;MAAA,GACA;QAAAJ,IAAA;QAAAI,IAAA;MAAA,EACA;MACAM,IAAA;MACA;MACAC,IAAA,0SAKA;MACAC,QAAA,s0BA4BA;MACAC,OAAA,sxEAyEA;MACAC,IAAA,+TAKA;MACAC,KAAA;IAoCA;EACA;EACA;EACAC,QAAA;EACA;EACAC,KAAA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,kBAAA,WAAAA,mBAAA;MACA,IAAAb,UAAA,QAAAA,UAAA;MACA,IAAAA,UAAA;QACA,KAAAF,WAAA,CAAAgB,IAAA,CAAAd,UAAA;MACA;MACA,KAAAD,YAAA;MACA,KAAAC,UAAA;IACA;IACAe,cAAA,WAAAA,eAAAC,GAAA;MACA,KAAAf,IAAA,CAAAgB,MAAA,MAAAhB,IAAA,CAAAiB,OAAA,CAAAF,GAAA;IACA;IACAG,WAAA,WAAAA,YAAAH,GAAA;MACA,KAAAlB,WAAA,CAAAmB,MAAA,MAAAnB,WAAA,CAAAoB,OAAA,CAAAF,GAAA;IACA;IACAI,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA,KAAAtB,YAAA;MACA,KAAAuB,SAAA;QACAD,KAAA,CAAAE,KAAA,CAAAC,YAAA,CAAAD,KAAA,CAAAE,KAAA,CAAAC,KAAA;MACA;IACA;IACA;IACAf,IAAA,WAAAA,KAAA;EACA;AACA","ignoreList":[]}]}