"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var _ = tslib_1.__importStar(require("@antv/util"));
var global_1 = require("../../base/global");
var factory_1 = require("../../components/factory");
var layer_1 = tslib_1.__importDefault(require("../bar/layer"));
require("./component/label/stack-bar-label");
var StackBarLayer = /** @class */ (function (_super) {
    tslib_1.__extends(StackBarLayer, _super);
    function StackBarLayer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'stackBar';
        return _this;
    }
    StackBarLayer.getDefaultOptions = function () {
        return _.deepMix({}, _super.getDefaultOptions.call(this), {
            xAxis: {
                visible: true,
                autoHideLabel: false,
                autoRotateLabel: false,
                autoRotateTitle: false,
                grid: {
                    visible: true,
                },
                line: {
                    visible: false,
                },
                tickLine: {
                    visible: true,
                },
                label: {
                    visible: true,
                },
                title: {
                    visible: true,
                    offset: 12,
                },
            },
            yAxis: {
                visible: true,
                autoHideLabel: false,
                autoRotateLabel: false,
                autoRotateTitle: true,
                grid: {
                    visible: false,
                },
                line: {
                    visible: false,
                },
                tickLine: {
                    visible: false,
                },
                label: {
                    visible: true,
                },
                title: {
                    visible: false,
                    offset: 12,
                },
            },
        });
    };
    StackBarLayer.prototype.adjustBar = function (bar) {
        bar.adjust = [
            {
                type: 'stack',
            },
        ];
    };
    StackBarLayer.prototype.extractLabel = function () {
        var props = this.options;
        var label = props.label;
        if (label.visible === false) {
            return false;
        }
        var labelConfig = factory_1.getComponent('label', tslib_1.__assign({ plot: this, labelType: 'stackBarLabel', fields: [props.xField] }, label));
        return labelConfig;
    };
    return StackBarLayer;
}(layer_1.default));
exports.default = StackBarLayer;
global_1.registerPlotType('stackBar', StackBarLayer);
//# sourceMappingURL=layer.js.map