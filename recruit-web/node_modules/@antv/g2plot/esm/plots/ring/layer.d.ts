import { LayerConfig } from '../../base/layer';
import PieLayer, { PieViewConfig } from '../pie/layer';
import './apply-responsive/theme';
import { LooseMap } from '../../interface/types';
export interface RingViewConfig extends PieViewConfig {
    innerRadius?: number;
    statistic?: any;
}
export interface RingLayerConfig extends RingViewConfig, LayerConfig {
}
export default class RingLayer<T extends RingLayerConfig = RingLayerConfig> extends PieLayer<T> {
    static centralId: number;
    type: string;
    private statistic;
    private statisticClass;
    static getDefaultOptions(): any;
    getOptions(props: T): any;
    beforeInit(): void;
    afterInit(): void;
    protected geometryParser(dim: any, type: any): any;
    protected coord(): void;
    protected annotation(): void;
    protected parseEvents(eventParser: any): void;
    private drawStatistic;
    /** 获取总计数据 */
    private getTotalValue;
    private parseStatisticData;
    private getStatisticTemplate;
    /** 获取中心文本的htmlString */
    private getStatisticHtmlString;
    private applyResponsive;
    private getStatisticSize;
    /** @override 调整 label 默认 options */
    protected adjustLabelDefaultOptions(options: RingLayerConfig): {
        visible: boolean;
        style?: {};
        formatter?: (text: string, item: any, idx: number, ...extras: any[]) => string;
        offsetX?: number;
        offsetY?: number;
        position?: string;
        type?: string;
        events?: LooseMap<string>;
        adjustColor?: boolean;
        adjustPosition?: boolean;
        precision?: number;
        suffix?: string;
        autoRotate?: boolean;
        labelLine?: any;
        offset?: string | number;
        line?: {
            smooth?: boolean;
            stroke?: string;
            lineWidth?: number;
        };
        allowOverlap?: boolean;
        fields?: string[];
    };
}
