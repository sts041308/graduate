import { PointObject } from '../../interface';
import { CoordinateCfg, CoordinateOption, CoordinateType } from '../interface';
export default class CoordController {
    type: CoordinateType;
    actions: any[][];
    cfg: CoordinateCfg;
    options: CoordinateOption;
    constructor(option?: CoordinateOption);
    reset(option: any): this;
    /**
     * 创建坐标系对象
     * @param  {Object} start 坐标系起始点
     * @param  {Object} end   坐标系结束点
     * @return {Function} 坐标系的构造函数
     */
    createCoord(start: PointObject, end: PointObject): any;
    /**
     * 围绕坐标系中心点旋转对应的角度
     * @param angle 旋转角度
     */
    rotate(angle: number): this;
    /**
     * 将坐标系沿 x 方向或者沿 y 轴方向进行镜像映射
     * @param dim 镜像方向，可选值 'x' 和 'y'，默认为 'x'
     */
    reflect(dim?: 'x' | 'y'): this;
    /**
     * 根据坐标系中心点进行相应的缩放
     * @param sx x 轴缩放值
     * @param sy y 轴缩放值
     */
    scale(sx: number, sy: number): this;
    /**
     * x，y 轴交换
     */
    transpose(): this;
    private _execActions;
    private _hasAction;
}
