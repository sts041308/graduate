import { __assign } from "tslib";
import * as _ from '@antv/util';
import { registerShape, registerShapeFactory } from './base';
import { splitPoints, setFillStyle } from '../util/shape';
function getFillAttrs(cfg) {
    var textAttrs = cfg.style;
    setFillStyle(textAttrs, cfg);
    if (_.isNumber(cfg.size)) { // 如果设置了size，则text的字体大小由size决定
        textAttrs.fontSize = cfg.size;
    }
    return textAttrs;
}
var TextShapeFactory = registerShapeFactory('text', {
    defaultShapeType: 'text',
    getDefaultPoints: function (pointInfo) {
        return splitPoints(pointInfo);
    },
});
registerShape('text', 'text', {
    draw: function (cfg, container) {
        var attrs = getFillAttrs(cfg);
        var shape = container.addShape('text', {
            attrs: __assign(__assign({}, attrs), { x: cfg.x, y: cfg.y, text: cfg.text }),
        });
        return shape;
    },
    getMarkerStyle: function (markerCfg) {
        var markerStyle = {
            symbol: 'circle',
            radius: 4.5,
        };
        setFillStyle(markerStyle, markerCfg);
        return markerStyle;
    },
});
export default TextShapeFactory;
//# sourceMappingURL=text.js.map