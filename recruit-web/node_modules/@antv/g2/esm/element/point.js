import { __assign, __extends } from "tslib";
import * as _ from '@antv/util';
import Element from './base';
import PointShapeFactory from './shape/point';
/**
 * Point 类型的几何图形
 * 绘制散点图
 */
var Point = /** @class */ (function (_super) {
    __extends(Point, _super);
    function Point(cfg) {
        var _this = _super.call(this, __assign({ type: 'point', shapeType: 'point', generatePoints: true, shareTooltip: false }, cfg)) || this;
        // 每一个 Element 对应一个确定的 shapeFactory
        _this.set('shapeFactory', PointShapeFactory);
        return _this;
    }
    // overwrite
    Point.prototype.drawPoint = function (obj, container, shapeFactory, index) {
        var _this = this;
        var shape = obj.shape;
        var cfg = this.getDrawCfg(obj);
        if (_.isArray(obj.y)) {
            var hasStackAdjust_1 = this.hasAdjust('stack');
            _.each(obj.y, function (y, idx) {
                cfg.y = y;
                cfg.yIndex = idx;
                if (!hasStackAdjust_1 || idx !== 0) {
                    var geomShape = shapeFactory.drawShape(shape, cfg, container);
                    _this.appendShapeInfo(geomShape, index + idx);
                }
            });
        }
        else if (!_.isNil(obj.y)) {
            var geomShape = shapeFactory.drawShape(shape, cfg, container);
            this.appendShapeInfo(geomShape, index);
        }
    };
    return Point;
}(Element));
export default Point;
//# sourceMappingURL=point.js.map