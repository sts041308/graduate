import Element from './base';
import { DataPointType } from '../interface';
export default class Path extends Element {
    constructor(cfg: DataPointType);
    /**
     * @override
     * 构造绘制 path 需要的属性
     * @param obj 数据
     */
    getDrawCfg(obj: DataPointType): {
        isStack: boolean;
        showSinglePoint: any;
        color: string;
        isInCircle: boolean;
        x: number | number[];
        y: number | number[];
        shape: string;
        size: number;
        opacity: number;
        origin: DataPointType;
        geomType?: string;
        id?: string;
        points?: DataPointType[];
        nextPoints?: import("../interface").PointObject[];
        splitedIndex?: number;
        text?: string;
        style?: DataPointType;
        yIndex?: number;
        constraint?: [number, number][];
        connectNulls?: boolean;
    };
    draw(data: DataPointType[], container: any, shapeFactory: any, index: number): void;
}
