import { __assign, __extends } from "tslib";
import Element from './base';
import SizeController from './controller/size';
import BoxShapeFactory from './shape/box';
var Box = /** @class */ (function (_super) {
    __extends(Box, _super);
    function Box(cfg) {
        var _this = _super.call(this, __assign({ type: 'box', shapeType: 'box', generatePoints: true }, cfg)) || this;
        // 初始化 sizeController
        var sizeController = new SizeController(_this);
        _this.set('sizeController', sizeController);
        _this.set('shapeFactory', BoxShapeFactory);
        return _this;
    }
    Box.prototype.createShapePointsCfg = function (obj) {
        var cfg = _super.prototype.createShapePointsCfg.call(this, obj);
        cfg.size = this.getNormalizedSize(obj);
        return cfg;
    };
    return Box;
}(Element));
export default Box;
//# sourceMappingURL=box.js.map