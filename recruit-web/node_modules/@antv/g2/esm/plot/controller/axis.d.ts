import { Group } from '@antv/g';
import { Coordinate, Scale } from '../../dependents';
import { AxesOption } from '../interface';
declare type AxisControllerCFG = Partial<{
    visible: boolean;
    canvas: Group;
    container: Group;
    coord: Coordinate;
    options: AxesOption;
    axes: any[];
    theme: {
        axis: any;
    };
    title: {
        text: any;
    };
}>;
export default class AxisController {
    title: AxisControllerCFG['title'];
    visible: AxisControllerCFG['visible'];
    canvas: AxisControllerCFG['canvas'];
    container: AxisControllerCFG['canvas'];
    coord: AxisControllerCFG['coord'];
    options: AxisControllerCFG['options'];
    axes: AxisControllerCFG['axes'];
    theme: AxisControllerCFG['theme'];
    constructor(cfg: AxisControllerCFG);
    createAxis(xScale: Scale, yScales: Scale[], viewId: any): void;
    changeVisible(visible: any): void;
    clear(): void;
    private _getAxisOptionByField;
    private _isHide;
    private _getMiddleValue;
    private _getLineRange;
    private _getLineCfg;
    private _getCircleCfg;
    private _getRadiusCfg;
    private _getHelixCfg;
    private _getAxisPosition;
    private _getAxisDefaultCfg;
    private _getAxisCfg;
    private _drawAxis;
}
export {};
