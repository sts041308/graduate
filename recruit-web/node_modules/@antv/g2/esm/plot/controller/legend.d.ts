import View from '../view';
/**
 * legend 的 controller，需要承载：
 *  - 从 plot 配置中，生成 legend 实例的逻辑。
 *  - 响应 legend 的事件，做对应的响应
 *
 * 设计使用方法如下：
 *
 * const legendController = new LegendController({
 *   view: View,
 *   theme: {},
 * });
 *
 * // 在合适的时机，初始化，构造
 * legendController.render();
 *
 * // 清空，销毁 legends
 * legendController.clear();
 */
export interface LegendControllerCfg {
    readonly view: View;
}
export declare type Value = number | string;
export default class LegendController {
    [key: string]: any;
    private view;
    private options;
    private panelRange;
    private viewRange;
    private container;
    private totalRegion;
    private theme;
    private legends;
    constructor(cfg: LegendControllerCfg);
    /**
     * 生成并渲染 legend
     */
    render(): void;
    /**
     * todo 显示隐藏图例
     * @param visible
     */
    changeVisible(visible: boolean): void;
    /**
     * 清空，销毁生成的 legend
     */
    clear(): void;
    /**
     * 重置配置项
     */
    reset(): void;
    /**
     * 初始化 legend 相关的属性
     */
    private init;
    /**
     * 根据相关的配置，添加一个图例
     * @param legendOptions
     * @param scale
     * @param attr
     * @param element
     * @param filteredValues
     */
    private addLegend;
    /**
     * 添加连续图例
     * @param scale
     * @param attr
     * @param position
     */
    private addContinuousLegend;
    /**
     * 添加分类图例
     * @param scale
     * @param attr
     * @param element
     * @param filteredValues
     * @param position
     */
    private addCategoryLegend;
    /**
     * 添加自定义图例
     * @param field
     */
    private addCustomLegend;
    /**
     * 根据 position 布局图例位置，将图例 moveTo 到对应的位置
     */
    private alignLegends;
    /**
     * 布局某些方法需要根据view的方法来写
     * @param legend
     * @param pre
     * @param region
     * @param position
     */
    private alignLegend;
    private getXAlign;
    private getYAlignHorizontal;
    private getYAlignVertical;
    private adjustPosition;
    private bindClickEvent;
    private bindHoverEvent;
    private getRegion;
    private getSubRegion;
    private isFiltered;
    private isFieldInView;
    private getLegendOptions;
    /**
     * 拿某一个字段上图例的配置，举例 position
     * 如果 field 上拿不到则使用 全局的，如果全局也没有，那么使用主题配置的默认
     * @param key
     * @param filed
     * @param defaultValue
     */
    private getFieldLegendConfig;
    /**
     * 连续图例，监听 item filter 事件
     * @param legend
     * @param scale
     */
    private bindFilterEvent;
    /**
     * 过滤 view 中的 shape，超过范围的隐藏，范围内的显示
     * @param field 字段
     * @param min 最小值
     * @param max 最大值
     */
    private filterShape;
    /**
     * 根据位置进行图例分类
     * @param position 图例位置
     */
    private groupLegendByPosition;
    /**
     * 处理 shape 上的 label 显示还是隐藏
     * @param shape
     * @param element
     * @param visible
     */
    private filterLabels;
    /**
     * 获取某一个字段的 legendOption；如果不存在字段配置，则使用全局配置
     * @param field
     * @param defaultValue
     */
    private getFieldLegendOption;
}
