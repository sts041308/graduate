import { Annotation } from '@antv/component';
import { AnnotationCfg } from '@antv/component/lib/annotation/base';
import { Group } from '@antv/g';
import { Coordinate, Scale } from '../../dependents';
import View from '../view';
declare type AnnControllerConfig = Partial<{
    xScales: Scale[] | Record<string, Scale>;
    yScales: Scale[] | Record<string, Scale>;
    view: View;
    theme: {
        annotation: any;
    };
    frontgroundGroup: Group;
    backgroundGroup: Group;
}>;
export default class AnnotationController {
    options: AnnotationCfg[];
    annotations: Annotation.Annotation[];
    xScales?: AnnControllerConfig['xScales'];
    yScales?: AnnControllerConfig['yScales'];
    view: AnnControllerConfig['view'];
    theme?: AnnControllerConfig['theme'];
    frontgroundGroup: AnnControllerConfig['frontgroundGroup'];
    backgroundGroup: AnnControllerConfig['backgroundGroup'];
    private coord;
    constructor(acfg: AnnControllerConfig);
    /** 为当前controller新增一个辅助元素实例 */
    add(type: string, annConfig: AnnotationCfg, top?: boolean): AnnotationController;
    /** 通过index获取指定的辅助元素实例 */
    get(idx: number): Annotation.Annotation;
    render(coord: Coordinate): void;
    /** 控制全部辅助元素展示与否 */
    changeVisible(visible: boolean): void;
    /** 销毁所有辅助元素 */
    clear(): void;
    /** 清空画布中的辅助元素 */
    reset(): void;
    /** 重绘所有辅助元素 */
    repaint(): void;
    private createAnnotations;
}
export {};
