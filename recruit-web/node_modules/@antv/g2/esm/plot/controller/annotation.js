import { __assign, __rest } from "tslib";
import { Annotation } from '@antv/component';
import * as _ from '@antv/util';
var AnnotationController = /** @class */ (function () {
    function AnnotationController(acfg) {
        this.options = [];
        this.annotations = [];
        _.assign(this, acfg);
    }
    /** 为当前controller新增一个辅助元素实例 */
    AnnotationController.prototype.add = function (type, annConfig, top) {
        if (top === void 0) { top = true; }
        var typeName = _.upperFirst(type);
        if (!Annotation[typeName]) {
            console.error("Annotation " + type + " not exist.");
        }
        else {
            this.options.push(__assign({ top: top,
                type: type }, annConfig));
        }
        return this;
    };
    /** 通过index获取指定的辅助元素实例 */
    AnnotationController.prototype.get = function (idx) {
        return this.annotations[idx];
    };
    AnnotationController.prototype.render = function (coord) {
        var _this = this;
        this.coord = coord;
        var view = this.view;
        var viewData = view && view.get('filteredData');
        this.createAnnotations();
        _.each(this.annotations, function (ann) {
            if (ann.get('top')) {
                ann.render(coord, _this.frontgroundGroup, viewData);
            }
            else {
                ann.render(coord, _this.backgroundGroup, viewData);
            }
        });
    };
    /** 控制全部辅助元素展示与否 */
    AnnotationController.prototype.changeVisible = function (visible) {
        _.each(this.annotations, function (ann) {
            ann.changeVisible(visible);
        });
    };
    /** 销毁所有辅助元素 */
    AnnotationController.prototype.clear = function () {
        this.reset();
        this.options = [];
        this.backgroundGroup && this.backgroundGroup.remove();
        this.frontgroundGroup && this.frontgroundGroup.remove();
    };
    /** 清空画布中的辅助元素 */
    AnnotationController.prototype.reset = function () {
        _.each(this.annotations, function (ann) {
            ann.clear();
        });
        this.annotations = [];
    };
    /** 重绘所有辅助元素 */
    AnnotationController.prototype.repaint = function () {
        var _this = this;
        if (this.coord && this.view) {
            var coord_1 = this.coord;
            var viewData_1 = this.view.get('filteredData');
            _.each(this.annotations, function (ann) {
                ann.clear();
                if (ann.get('top')) {
                    ann.render(coord_1, _this.frontgroundGroup, viewData_1);
                }
                else {
                    ann.render(coord_1, _this.backgroundGroup, viewData_1);
                }
            });
            var canvas = this.view.get('canvas');
            canvas.draw();
        }
        else {
            throw new Error('need render first');
        }
    };
    AnnotationController.prototype.createAnnotations = function () {
        var _this = this;
        _.each(this.options, function (option) {
            var type = option.type, top = option.top, others = __rest(option, ["type", "top"]);
            var ann = new Annotation[_.upperFirst(type)](_.deepMix({}, __assign({ xScales: _this.xScales, yScales: _this.yScales }, (_.get(_this.theme, "annotation." + type) ? _this.theme.annotation[type] : {})), others));
            ann.set('top', top); // 标记渲染图层是否为frontgroundGroup
            _this.annotations.push(ann);
        });
    };
    return AnnotationController;
}());
export default AnnotationController;
//# sourceMappingURL=annotation.js.map