import Shape from '../../core/shape';
import BBox from '../../core/bbox';
declare class Marker extends Shape {
    type: string;
    canFill: boolean;
    canStroke: boolean;
    static symbolsFactory: {
        get(type: string): import("./symbols").SymbolFunc;
        register(type: string, func: import("./symbols").SymbolFunc): void;
        remove(type: string): void;
        getAll(): {
            circle(x: number, y: number, r: number): any[];
            square(x: number, y: number, r: number): any[];
            diamond(x: number, y: number, r: number): any[];
            triangle(x: number, y: number, r: number): any[];
            triangleDown: (x: number, y: number, r: number) => any[];
        };
    };
    getDefaultAttrs(): {
        path: any;
        x: number;
        y: number;
        lineWidth: number;
    };
    isPointInPath(x: number, y: number): boolean;
    calculateBox(): BBox;
    _getPath(): any[];
    createPath(context: CanvasRenderingContext2D): void;
}
export default Marker;
