import Element from './element';
import BBox from './bbox';
declare class Shape extends Element {
    isShape: boolean;
    id?: string;
    name?: string;
    createPath(context: CanvasRenderingContext2D): void;
    afterPath(context: CanvasRenderingContext2D): void;
    isPointInPath(x: number, y: number): boolean;
    drawInner(context: CanvasRenderingContext2D): void;
    /**
     * 击中图形时是否进行包围盒判断
     * @return {Boolean} [description]
     */
    isHitBox(): boolean;
    /**
     * 节点是否能够被击中
     * @param {Number} x x坐标
     * @param {Number} y y坐标
     * @return {Boolean} 是否在图形中
     */
    isHit(x: number, y: number): boolean;
    /**
     * @protected
     * 计算包围盒
     * @return {Object} 包围盒
     */
    calculateBox(): BBox;
    getHitLineWidth(): number;
    clearTotalMatrix(): void;
    clearBBox(): void;
    getBBox(): BBox;
    clone(): Shape;
}
export default Shape;
