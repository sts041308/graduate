/**
 * @file 基于 G 的缩略轴组件（Slider 组件）
 * @author hustcc
 */
import { Group } from '@antv/g';
interface TrendCfg {
    readonly data: number[];
    readonly smooth?: boolean;
    readonly isArea?: boolean;
    readonly backgroundStyle?: object;
    readonly lineStyle?: object;
    readonly areaStyle?: object;
}
export interface SliderCfg {
    readonly x: number;
    readonly y: number;
    readonly width: number;
    readonly height: number;
    readonly trendCfg?: TrendCfg;
    readonly backgroundStyle?: any;
    readonly foregroundStyle?: any;
    readonly handlerStyle?: any;
    readonly textStyle?: any;
    readonly start?: number;
    readonly end?: number;
    readonly minText?: string;
    readonly maxText?: string;
}
/**
 * 缩略轴组件
 * 设计稿：https://yuque.antfin-inc.com/antv/cfksca/432935?artboard_type=artboard&view=&from=#comment-518267
 */
export default class Slider extends Group {
    x: number;
    y: number;
    width: number;
    height: number;
    private trendCfg;
    private backgroundStyle;
    private foregroundStyle;
    private handlerStyle;
    private textStyle;
    private trendShape;
    private backgroundShape;
    private foregroundShape;
    private minHandlerShape;
    private minTextShape;
    private maxHandlerShape;
    private maxTextShape;
    private start;
    private end;
    private minText;
    private maxText;
    private currentHandler;
    private prevX;
    private prevY;
    constructor(cfg: SliderCfg);
    /**
     * 更新配置
     * @param cfg
     */
    update(cfg: Partial<SliderCfg>): void;
    /**
     * 初始化组件结构
     * @private
     */
    private _initial;
    /**
     * 绑定事件：
     *  - 点击
     *  - 滑动
     *  - 拖拽
     *  - 滚动
     * @private
     */
    private _bindEvents;
    private onMouseDown;
    private onMouseMove;
    private onMouseUp;
    /**
     * 调整 offsetRange，因为一些范围的限制
     * @param offsetRange
     */
    private adjustOffsetRange;
    private updateStartEnd;
    /**
     * 根据移动的比例来更新 ui
     * @private
     */
    private _updateUI;
    /**
     * 调整 text 的位置，自动躲避
     * 根据位置，调整返回新的位置
     * @param range
     */
    private _dodgeText;
}
export {};
