"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var g_1 = require("@antv/g");
var _ = require("@antv/util");
var constant_1 = require("./constant");
var path_1 = require("./path");
/**
 * 缩略趋势图
 */
var Trend = /** @class */ (function (_super) {
    tslib_1.__extends(Trend, _super);
    function Trend(cfg) {
        var _this = _super.call(this) || this;
        var _a = cfg.x, x = _a === void 0 ? 0 : _a, _b = cfg.y, y = _b === void 0 ? 0 : _b, _c = cfg.width, width = _c === void 0 ? 200 : _c, _d = cfg.height, height = _d === void 0 ? 16 : _d, _e = cfg.smooth, smooth = _e === void 0 ? true : _e, _f = cfg.isArea, isArea = _f === void 0 ? false : _f, _g = cfg.data, data = _g === void 0 ? [] : _g, backgroundStyle = cfg.backgroundStyle, lineStyle = cfg.lineStyle, areaStyle = cfg.areaStyle;
        _this.x = x;
        _this.y = y;
        _this.width = width;
        _this.height = height;
        _this.data = data;
        _this.smooth = smooth;
        _this.isArea = isArea;
        _this.backgroundStyle = _.assign({}, constant_1.BACKGROUND_STYLE, backgroundStyle);
        _this.lineStyle = _.assign({}, constant_1.LINE_STYLE, lineStyle);
        _this.areaStyle = _.assign({}, constant_1.AREA_STYLE, areaStyle);
        _this._initial();
        return _this;
    }
    /**
     * 构造
     * @private
     */
    Trend.prototype._initial = function () {
        var _a = this, x = _a.x, y = _a.y, width = _a.width, height = _a.height, data = _a.data, smooth = _a.smooth, isArea = _a.isArea, backgroundStyle = _a.backgroundStyle, lineStyle = _a.lineStyle, areaStyle = _a.areaStyle;
        // 背景
        this.backgroundShape = this.addShape('rect', {
            attrs: tslib_1.__assign({ x: 0, y: 0, width: width,
                height: height }, backgroundStyle),
        });
        var path = path_1.dataToPath(data, width, height, smooth);
        // 线
        this.lineShape = this.addShape('path', {
            attrs: tslib_1.__assign({ path: path }, lineStyle),
        });
        // area
        // 在 path 的基础上，增加两个坐标点
        var areaPath = path_1.linePathToAreaPath(path, width, height);
        if (isArea) {
            this.areaShape = this.addShape('path', {
                attrs: tslib_1.__assign({ path: areaPath }, areaStyle),
            });
        }
        // 统一移动到对应的位置
        this.move(x, y);
    };
    return Trend;
}(g_1.Group));
exports.default = Trend;
//# sourceMappingURL=index.js.map