import { __assign, __extends } from "tslib";
import * as _ from '@antv/util';
import Annotation from './base';
var Text = /** @class */ (function (_super) {
    __extends(Text, _super);
    function Text(cfg) {
        return _super.call(this, __assign({ type: 'text', position: null, content: null, style: {
                fill: '#999',
                fontSize: 12,
                fontWeight: 500,
                textAlign: 'center',
            } }, cfg)) || this;
    }
    Text.prototype.render = function (coord, group) {
        var point = this.parsePoint(coord, this.get('position'));
        var textStyle = _.clone(this.get('style'));
        var offsetX = this.get('offsetX');
        var offsetY = this.get('offsetY');
        if (offsetX) {
            point.x += offsetX;
        }
        if (offsetY) {
            point.y += offsetY;
        }
        if (textStyle.rotate) {
            textStyle.rotate = (textStyle.rotate * Math.PI) / 180; // 将角度转换为弧度
        }
        var guideText = group.addShape('Text', {
            zIndex: this.get('zIndex'),
            attrs: _.assign({
                text: this.get('content'),
            }, textStyle, point),
        });
        guideText.name = 'annotation-text';
        if (this.get('appendInfo')) {
            guideText.setSilent('appendInfo', this.get('appendInfo'));
        }
        this.set('el', guideText);
    };
    return Text;
}(Annotation));
export default Text;
//# sourceMappingURL=text.js.map