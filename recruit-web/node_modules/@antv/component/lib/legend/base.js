"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var _ = require("@antv/util");
var base_1 = require("../base");
var Legend = /** @class */ (function (_super) {
    tslib_1.__extends(Legend, _super);
    function Legend(cfg) {
        var _this = _super.call(this, tslib_1.__assign({ 
            /**
             * 图例类型
             */
            type: 'base', 
            /**
             * 图例标题
             */
            title: null, 
            /**
             * 图例项集合
             */
            items: null, 
            /**
             * 图例文本显示格式化回调函数
             */
            formatter: null, 
            /**
             * 图例整体在 X 轴方向的偏移量
             */
            offsetX: 0, 
            /**
             * 图例整体在 Y 轴方向上的偏移量
             */
            offsetY: 0 }, cfg)) || this;
        _this.init();
        _this.render();
        _this.bindEvents();
        return _this;
    }
    /**
     * 渲染图例内容
     */
    Legend.prototype.render = function () {
        this.renderTitle(); // 渲染标题
        this.renderItems(); // 渲染图例项
    };
    /**
     * @override
     * 获取图例的宽度
     */
    Legend.prototype.getWidth = function () {
        var container = this.get('container');
        var bbox = container.getBBox();
        return bbox.width;
    };
    /**
     * @override
     * 获取图例的高度
     */
    Legend.prototype.getHeight = function () {
        var container = this.get('container');
        var bbox = container.getBBox();
        return bbox.height;
    };
    /**
     * @override
     * 获取图例BBox
     */
    Legend.prototype.getBBox = function () {
        return this.get('container').getBBox();
    };
    /**
     * @override
     * 将图例移动至 (x, y）坐标点位置
     * @param x x 坐标
     * @param y y 坐标
     */
    Legend.prototype.moveTo = function (x, y) {
        var container = this.get('container');
        container.move(x, y);
        this.set('x', x);
        this.set('y', y);
    };
    /**
     * 绘制图例
     */
    Legend.prototype.draw = function () {
        this.get('canvas').draw();
    };
    /* 格式化 legend 显示数据 */
    Legend.prototype.formatterValue = function (v) {
        var formatter = this.get('formatter') || _.identity;
        return formatter.call(this, v);
    };
    return Legend;
}(base_1.default));
exports.default = Legend;
//# sourceMappingURL=base.js.map