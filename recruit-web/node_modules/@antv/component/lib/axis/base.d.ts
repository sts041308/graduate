import Guide from '../base';
import { AxisCfg, PointType } from '../interface';
interface Tick {
    text: string;
    value: number;
}
export default abstract class Axis extends Guide<AxisCfg> {
    constructor(cfg: AxisCfg);
    render(): void;
    destroy(): void;
    clear(): void;
    /**
     * 获取坐标轴线的 path
     * @abstract
     * @return {[type]} [description]
     */
    abstract getLinePath(): any[];
    /**
     * 获取 tick 在画布上的位置
     * @abstract
     * @return {[type]} [description]
     */
    abstract getTickPoint(p: number, index?: number): PointType;
    /**
     * 获取标示坐标点的线的终点
     * @abstract
     */
    abstract getTickEnd(point?: any, length?: number, index?: number): PointType;
    /**
     * 获取距离坐标轴的向量
     * @abstract
     * @return {[type]} [description]
     */
    abstract getSideVector(offset: number, point: PointType, index: number): number[];
    /**
     * 解析 tick 文本
     * @param tick tick 文本值
     * @param index tick 对应的索引值
     * @param length 所有 tick 的总长度
     */
    protected parseTick(tick: string, index: number, length: number): Tick;
    /**
     * 添加 labelItems
     * @param tick 坐标轴刻度信息
     * @param point 位置点信息
     * @param index 对应的索引值
     * @param tickCount 全部坐标轴刻度的个数
     */
    protected addLabel(tick: Tick, point: any, index: number, tickCount: number): void;
    /**
     * 根据向量值获取文本的对齐方式
     * @param vector 文本的向量值
     */
    protected getTextAnchor(vector: any): "center" | "end" | "start";
    protected getMaxLabelWidthOrHeight(labelRenderer: any, property: 'height' | 'width'): number;
    /**
     * 自动旋转文本
     * @override
     */
    protected autoRotateLabels(): void;
    /**
     * 文本自动防遮罩
     * @override
     */
    protected autoHideLabels(): void;
    /**
     * 渲染标题
     * @override
     */
    protected renderTitle(): void;
    protected _renderLine(): void;
    protected _renderTicks(): void;
    protected _renderGrid(): void;
    protected _renderLabels(): void;
    private _processTicks;
    private _parseTicks;
    private _addTickItem;
    private _addTickLine;
    private _drawAlternativeBg;
    private _getBackItem;
}
export {};
